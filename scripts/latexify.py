### Here we store various methods to create strings to use with latex

import matplotlib as mpl
import numpy as np

physical_params = [
    "dw",
    "dEpsilon",
    "drho_ice",
    "dT_freeze",
    "drho_w",
    "dM_w",
    "dM_a",
    "dgravity_acc",
    "drho_0",
    "dK_T",
    "dR_a",
    "dT_sat_low_temp",
    "dp_sat_const_a",
    "dp_sat_const_b",
    "dp_sat_ice_const_a",
    "dp_sat_low_temp",
    "dcloud_nm1",
    "dcloud_nm2",
    "dcloud_nm3",
    "drain_nm1",
    "drain_nm2",
    "drain_nm3",
    "dice_nm1",
    "dice_nm2",
    "dice_nm3",
    "dsnow_nm1",
    "dsnow_nm2",
    "dsnow_nm3",
    "dhail_nm1",
    "dhail_nm2",
    "dhail_nm3",
    "dgraupel_nm1",
    "dgraupel_nm2",
    "dgraupel_nm3",
    "dL_wd",
    "dcp",
    "dD_v",
    "dL_ed",
    "dR_v",
    # Not exactly physical parameters, but derived ones that
    # shouldn't be considered for analysis
    "dice_sc_delta_q",
    "dice_sc_delta_n",
    "dice_sc_theta_n",
    "dice_sc_theta_q",
    "dsnow_sc_delta_q",
    "dsnow_sc_delta_n",
    "dsnow_sc_theta_n",
    "dsnow_sc_theta_q",
    "drain_sc_delta_q",
    "drain_sc_delta_n",
    "drain_sc_theta_n",
    "drain_sc_theta_q",
    "dhail_sc_delta_q",
    "dhail_sc_delta_n",
    "dhail_sc_theta_n",
    "dhail_sc_theta_q",
    "dgraupel_sc_delta_q",
    "dgraupel_sc_delta_n",
    "dgraupel_sc_theta_n",
    "dgraupel_sc_theta_q",
    "dcloud_sc_delta_q",
    "dcloud_sc_delta_n",
    "dcloud_sc_theta_n",
    "dcloud_sc_theta_q",
    "dgraupel_sc_coll_n",
]

json_particle_cons = [
    "a_geo",
    "b_geo",
    "min_x",
    "min_x_act",
    "min_x_nuc_homo",
    "min_x_nuc_hetero",
    "min_x_melt",
    "min_x_evap",
    "min_x_freezing",
    "min_x_depo",
    "min_x_collision",
    "min_x_collection",
    "min_x_conversion",
    "min_x_sedimentation",
    "min_x_riming",
    "max_x",
    "sc_theta_q",
    "sc_delta_q",
    "sc_theta_n",
    "sc_delta_n",
    "s_vel",
    "a_vel",
    "b_vel",
    "rho_v",
    "c_z",
    "sc_coll_n",
    "cmu0",
    "cmu1",
    "cmu2",
    "cmu3",
    "cmu4",
    "cmu5",
    "alpha",
    "beta",
    "gamma",
    "g1",
    "g2",
    "mu",
    "nu",
    "nm1",
    "nm2",
    "nm3",
    "q_crit_c",
    "d_crit_c",
    "ecoll_c",
    "cap",
    "a_ven",
    "b_ven",
    "c_s",
    "a_f",
    "b_f",
    "alfa_n",
    "alfa_q",
    "lambda",
    "vsedi_min",
    "vsedi_max",
]
json_particles = ["rain", "cloud", "graupel", "hail", "ice", "snow"]
json_model_cons = [
    "rain_gfak",
    "cloud_k_au",
    "cloud_k_sc",
    "kc_autocon",
    "inv_z",
    "dw",
    "q_crit_i",
    "D_crit_i",
    "D_conv_i",
    "q_crit_r",
    "D_crit_r",
    "q_crit_fr",
    "D_coll_c",
    "q_crit",
    "D_conv_sg",
    "D_conv_ig",
    "x_conv",
    "parcel_height",
    "alpha_spacefilling",
    "T_nuc",
    "T_freeze",
    "T_f",
    "D_eq",
    "rho_w",
    "rho_0",
    "rho_vel",
    "rho_vel_c",
    "rho_ice",
    "M_w",
    "M_a",
    "R_universal",
    "Epsilon",
    "gravity_acc",
    "R_a",
    "R_v",
    "a_v",
    "b_v",
    "a_prime",
    "b_prime",
    "c_prime",
    "K_T",
    "L_wd",
    "L_ed",
    "D_v",
    "ecoll_min",
    "ecoll_gg",
    "ecoll_gg_wet",
    "kin_visc_air",
    "C_mult",
    "T_mult_min",
    "T_mult_max",
    "T_mult_opt",
    "const0",
    "const3",
    "const4",
    "const5",
    "D_rainfrz_gh",
    "D_rainfrz_ig",
    "dv0",
    "p_sat_melt",
    "cp",
    "k_b",
    "a_HET",
    "b_HET",
    "N_sc",
    "n_f",
    "N_avo",
    "na_dust",
    "na_soot",
    "na_orga",
    "ni_het_max",
    "ni_hom_max",
    "a_dep",
    "b_dep",
    "c_dep",
    "d_dep",
    "nim_imm",
    "nin_dep",
    "alf_imm",
    "bet_dep",
    "bet_imm",
    "r_const",
    "r1_const",
    "cv",
    "p_sat_const_a",
    "p_sat_ice_const_a",
    "p_sat_const_b",
    "p_sat_ice_const_b",
    "p_sat_low_temp",
    "T_sat_low_temp",
    "alpha_depo",
    "r_0",
    "k_1_conv",
    "k_2_conv",
    "k_1_accr",
    "k_r",
    "a_ccn_1",
    "a_ccn_2",
    "a_ccn_3",
    "a_ccn_4",
    "b_ccn_1",
    "b_ccn_2",
    "b_ccn_3",
    "b_ccn_4",
    "c_ccn_1",
    "c_ccn_2",
    "c_ccn_3",
    "c_ccn_4",
    "d_ccn_1",
    "d_ccn_2",
    "d_ccn_3",
    "d_ccn_4",
]

mappings = {
    "lat_heat": "Latent Heating",
    "lat_cool": "Latent Cooling",
    "latent_heat": "Latent Heating",
    "latent_cool": "Latent Cooling",
    "dinv_z": r"$ \partial z^{-1} $",
    "ratio_deriv": "Derivative Ratio",
    "in_param": "Input Parameter",
    "p": "Pressure",
    "T": "Temperature",
    "S": "Saturation",
    "Si": "Saturation w.r.t. Ice",
    "Q_TURBULENCE": "Mass Mixing from Turbulence",
    "qv": "Water Vapor Mass Density",
    "qc": "Cloud Droplet Mass Density",
    "qr": "Rain Droplet Mass Density",
    "qs": "Snow Mass Density",
    "qi": "Ice Mass Density",
    "qg": "Graupel Mass Density",
    "qh": "Hail Mass Density",
    "Nv": "Water Vapor Particle Density",
    "Nc": "Cloud Droplet Particle Density",
    "Nr": "Rain Droplet Particle Density",
    "Ns": "Snow Particle Density",
    "Ni": "Ice Particle Density",
    "Ng": "Graupel Particle Density",
    "Nh": "Hail Particle Density",
    "qvout": "Precipitation of Water Vapor Mass Density",
    "qcout": "Precipitation of Cloud Droplet Mass Density",
    "qrout": "Precipitation of Rain Droplet Mass Density",
    "qsout": "Precipitation of Snow Mass Density",
    "qiout": "Precipitation of Ice Mass Density",
    "qgout": "Precipitation of Graupel Mass Density",
    "qhout": "Precipitation of Hail Mass Density",
    "Nrout": "Precipitation of Rain Droplets",
    "Nsout": "Precipitation of Snow Crystals",
    "Niout": "Precipitation of Ice Crystals",
    "Ngout": "Precipitation of Graupel Particles",
    "Nhout": "Precipitation of Hail Particles",
    "LATITUDE": "Latitude",
    "LONGITDUE": "longitude",
    "pressure": "Pressure",
    "pressure_hPa": "Pressure",
    "QV": "Water Vapor Mass Density",
    "QC": "Cloud Droplet Mass Density",
    "QR": "Rain Droplet Mass Density",
    "QS": "Snow Mass Density",
    "QI": "Ice Mass Density",
    "QG": "Graupel Mass Density",
    "QH": "Hail Mass Density",
    "NCCLOUD": "Cloud Droplet Particle Density",
    "NCRAIN": "Rain Droplet Particle Density",
    "NCSNOW": "Snow Particle Density",
    "NCICE": "Ice Particle Density",
    "NCGRAUPEL": "Graupel Particle Density",
    "NCHAIL": "Hail Particle Density",
    "QR_IN": "sedimentation (from above) of rain droplet mass density",
    "QS_IN": "sedimentation (from above) of snow crystal mass density",
    "QI_IN": "sedimentation (from above) of ice crystal mass density",
    "QG_IN": "sedimentation (from above) of graupel mass density",
    "QR_OUT": "sedimentation of rain droplet mass density",
    "QS_OUT": "sedimentation of snow crystal mass density",
    "QI_OUT": "sedimentation of ice crystal mass density",
    "QG_OUT": "sedimentation of graupel mass density",
    "QH_OUT": "sedimentation of hail mass density",
    "NR_OUT": "sedimentation of rain droplets",
    "NS_OUT": "sedimentation of snow crystals",
    "NI_OUT": "sedimentation of ice crystals",
    "NG_OUT": "sedimentation of graupel particles",
    "NH_OUT": "sedimentation of hail particles",
    "Q_liquid": "Liquid Water Content",
    "Q_cold": "Cold Hydrometeor Content",
    "Q_total": "Total Water Content",
    "lat": "Latitude",
    "lon": "longitude",
    "z": "Height [m]",
    "w": "Ascend [m/s]",
    "MAP": "Flag for WCB-criterion",
    "Derivatives": "Derivatives",
    "timestep": "Time [s] after ascend begins",
    "time": "Time [s] after COSMO simulation begins",
    "time_after_ascent": "Time [s] after ascend begins",
    "time_after_ascent_h": "Time [h] after ascend begins",
    "step": "Simulation step",
    "dmin_x_nuc_hetero": r"$ \partial x_{\mathrm{min},\mathrm{nuc},\mathrm{het}} $",
    "dmin_x_nuc_homo": r"$ \partial x_{\mathrm{min},\mathrm{nuc},\mathrm{hom}} $",
    "dmin_x_melt": r"$ \partial x_{\mathrm{min},\mathrm{melt}} $",
    "dmin_x_evap": r"$ \partial x_{\mathrm{min},\mathrm{evap}} $",
    "dmin_x_freezing": r"$ \partial x_{\mathrm{min},\mathrm{frz}} $",
    "dmin_x_depo": r"$ \partial x_{\mathrm{min},\mathrm{dep}} $",
    "dmin_x_collision": r"$ \partial x_{\mathrm{min},\mathrm{coli}} $",
    "dmin_x_collection": r"$ \partial x_{\mathrm{min},\mathrm{coll}} $",
    "dmin_x_conversion": r"$ \partial x_{\mathrm{min},\mathrm{con}} $",
    "dmin_x_sedimentation": r"$ \partial x_{\mathrm{min},\mathrm{sed}} $",
    "dmin_x_riming": r"$ \partial x_{\mathrm{min},\mathrm{rim}} $",
    "dEpsilon": r"$ \partial \varepsilon$",
    "dkin_visc_air": r"$ \partial \nu_{\mathrm{kin}, \mathrm{air}} $",
    "dK_T": r"$K_{\mathrm{air}} $",
    "dp_sat_const_a": r"$ \partial p_{\mathrm{sat}, a} $",
    "dp_sat_ice_const_a": r"$ \partial p_{\mathrm{sat}, \mathrm{ice}, a} $",
    "dp_sat_const_b": r"$ \partial p_{\mathrm{sat}, b} $",
    "dp_sat_ice_const_b": r"$ \partial p_{\mathrm{sat}, \mathrm{ice}, b} $",
    "dp_sat_low_temp": r"$ \partial p_{\mathrm{sat}, \mathrm{low}, T} $",
    "dT_sat_low_temp": r"$ \partial T_{\mathrm{sat}, \mathrm{low}, T} $",
    "ddv0": r"$D_{0, \mathrm{vapor}} $",
    "instance_id": "Instance ID",
    "dT_mult_min": r"$ \partial T_{\mathrm{mult}, \mathrm{min}} $",
    "dT_mult_max": r"$ \partial T_{\mathrm{mult}, \mathrm{max}} $",
    "dp_sat_melt": r"$ p_{\mathrm{sat}, \mathrm{melt}} $",
    "dkin_visc_air": r"$ \nu_{\mathrm{kin}, \mathrm{air}} $",
    "drain_cmu1": r"$ \mu_{\mathrm{rain}, c, 1} $",
    "drain_cmu2": r"$ \mu_{\mathrm{rain}, c, 2} $",
    "drain_cmu3": r"$ \mu_{\mathrm{rain}, c, 3} $",
    "drain_cmu4": r"$ \mu_{\mathrm{rain}, c, 4} $",
    "Specific_Humidity": "specific humidity",
}


# A dictionary of all the derivatives where the key refers to the
# particle for which the parameter is defined. However,
# cloud parameters can affect rain droplets!
in_params_dic = {
    "Misc": [
        "da_1",
        "da_2",
        "de_1",
        "de_2",
        "dd",
        "dN_c",
        "dgamma",
        "dbeta_c",
        "dbeta_r",
        "ddelta1",
        "ddelta2",
        "dzeta",
        "drain_gfak",
        "dcloud_k_au",
        "dcloud_k_sc",
        "dkc_autocon",
        "dinv_z",
        "dw",
        "dq_crit_i",
        "dD_crit_i",
        "dD_conv_i",
        "dq_crit_r",
        "dD_crit_r",
        "dq_crit_fr",
        "dD_coll_c",
        "dq_crit",
        "dD_conv_sg",
        "dD_conv_ig",
        "dx_conv",
        "dparcel_height",
        "dalpha_spacefilling",
        "dT_nuc",
        "dT_freeze",
        "dT_f",
        "dD_eq",
        "drho_w",
        "drho_0",
        "drho_vel",
        "drho_vel_c",
        "drho_ice",
        "dM_w",
        "dM_a",
        "dR_universal",
        "dEpsilon",
        "dgravity_acc",
        "dR_a",
        "dR_v",
        "da_v",
        "db_v",
        "da_prime",
        "db_prime",
        "dc_prime",
        "dK_T",
        "dL_wd",
        "dL_ed",
        "dD_v",
        "decoll_min",
        "decoll_gg",
        "decoll_gg_wet",
        "dkin_visc_air",
        "dC_mult",
        "dT_mult_min",
        "dT_mult_max",
        "dT_mult_opt",
        "dconst0",
        "dconst3",
        "dconst4",
        "dconst5",
        "dD_rainfrz_gh",
        "dD_rainfrz_ig",
        "ddv0",
        "dp_sat_melt",
        "dcp",
        "dk_b",
        "da_HET",
        "db_HET",
        "dN_sc",
        "dn_f",
        "dN_avo",
        "dna_dust",
        "dna_soot",
        "dna_orga",
        "dni_het_max",
        "dni_hom_max",
        "da_dep",
        "db_dep",
        "dc_dep",
        "dd_dep",
        "dnim_imm",
        "dnin_dep",
        "dalf_imm",
        "dbet_dep",
        "dbet_imm",
        "dr_const",
        "dr1_const",
        "dcv",
        "dp_sat_const_a",
        "dp_sat_ice_const_a",
        "dp_sat_const_b",
        "dp_sat_ice_const_b",
        "dp_sat_low_temp",
        "dT_sat_low_temp",
        "dalpha_depo",
        "dr_0",
        "dk_1_conv",
        "dk_2_conv",
        "dk_1_accr",
        "dk_r",
        "da_ccn_1",
        "da_ccn_2",
        "da_ccn_3",
        "da_ccn_4",
        "db_ccn_1",
        "db_ccn_2",
        "db_ccn_3",
        "db_ccn_4",
        "dc_ccn_1",
        "dc_ccn_2",
        "dc_ccn_3",
        "dc_ccn_4",
        "dd_ccn_1",
        "dd_ccn_2",
        "dd_ccn_3",
        "dd_ccn_4",
    ],
    "Rain": [
        "drain_a_geo",
        "drain_b_geo",
        "drain_min_x",
        "drain_min_x_act",
        "drain_min_x_nuc_homo",
        "drain_min_x_nuc_hetero",
        "drain_min_x_melt",
        "drain_min_x_evap",
        "drain_min_x_freezing",
        "drain_min_x_depo",
        "drain_min_x_collision",
        "drain_min_x_collection",
        "drain_min_x_conversion",
        "drain_min_x_sedimentation",
        "drain_min_x_riming",
        "drain_max_x",
        "drain_sc_theta_q",
        "drain_sc_delta_q",
        "drain_sc_theta_n",
        "drain_sc_delta_n",
        "drain_s_vel",
        "drain_a_vel",
        "drain_b_vel",
        "drain_rho_v",
        "drain_c_z",
        "drain_sc_coll_n",
        "drain_cmu0",
        "drain_cmu1",
        "drain_cmu2",
        "drain_cmu3",
        "drain_cmu4",
        "drain_cmu5",
        "drain_alpha",
        "drain_beta",
        "drain_gamma",
        "drain_nu",
        "drain_g1",
        "drain_g2",
        "drain_mu",
        "drain_nm1",
        "drain_nm2",
        "drain_nm3",
        "drain_q_crit_c",
        "drain_d_crit_c",
        "drain_ecoll_c",
        "drain_cap",
        "drain_a_ven",
        "drain_b_ven",
        "drain_c_s",
        "drain_a_f",
        "drain_b_f",
        "drain_alfa_n",
        "drain_alfa_q",
        "drain_lambda",
        "drain_vsedi_min",
        "drain_vsedi_max",
    ],
    "Cloud": [
        "dcloud_a_geo",
        "dcloud_b_geo",
        "dcloud_min_x",
        "dcloud_min_x_act",
        "dcloud_min_x_nuc_homo",
        "dcloud_min_x_nuc_hetero",
        "dcloud_min_x_melt",
        "dcloud_min_x_evap",
        "dcloud_min_x_freezing",
        "dcloud_min_x_depo",
        "dcloud_min_x_collision",
        "dcloud_min_x_collection",
        "dcloud_min_x_conversion",
        "dcloud_min_x_sedimentation",
        "dcloud_min_x_riming",
        "dcloud_max_x",
        "dcloud_sc_theta_q",
        "dcloud_sc_delta_q",
        "dcloud_sc_theta_n",
        "dcloud_sc_delta_n",
        "dcloud_s_vel",
        "dcloud_a_vel",
        "dcloud_b_vel",
        "dcloud_rho_v",
        "dcloud_c_z",
        "dcloud_sc_coll_n",
        "dcloud_cmu0",
        "dcloud_cmu1",
        "dcloud_cmu2",
        "dcloud_cmu3",
        "dcloud_cmu4",
        "dcloud_cmu5",
        "dcloud_alpha",
        "dcloud_beta",
        "dcloud_gamma",
        "dcloud_nu",
        "dcloud_g1",
        "dcloud_g2",
        "dcloud_mu",
        "dcloud_nm1",
        "dcloud_nm2",
        "dcloud_nm3",
        "dcloud_q_crit_c",
        "dcloud_d_crit_c",
        "dcloud_ecoll_c",
        "dcloud_cap",
        "dcloud_a_ven",
        "dcloud_b_ven",
        "dcloud_c_s",
        "dcloud_a_f",
        "dcloud_b_f",
        "dcloud_alfa_n",
        "dcloud_alfa_q",
        "dcloud_lambda",
        "dcloud_vsedi_min",
        "dcloud_vsedi_max",
    ],
    "Graupel": [
        "dgraupel_a_geo",
        "dgraupel_b_geo",
        "dgraupel_min_x",
        "dgraupel_min_x_act",
        "dgraupel_min_x_nuc_homo",
        "dgraupel_min_x_nuc_hetero",
        "dgraupel_min_x_melt",
        "dgraupel_min_x_evap",
        "dgraupel_min_x_freezing",
        "dgraupel_min_x_depo",
        "dgraupel_min_x_collision",
        "dgraupel_min_x_collection",
        "dgraupel_min_x_conversion",
        "dgraupel_min_x_sedimentation",
        "dgraupel_min_x_riming",
        "dgraupel_max_x",
        "dgraupel_sc_theta_q",
        "dgraupel_sc_delta_q",
        "dgraupel_sc_theta_n",
        "dgraupel_sc_delta_n",
        "dgraupel_s_vel",
        "dgraupel_a_vel",
        "dgraupel_b_vel",
        "dgraupel_rho_v",
        "dgraupel_c_z",
        "dgraupel_sc_coll_n",
        "dgraupel_cmu0",
        "dgraupel_cmu1",
        "dgraupel_cmu2",
        "dgraupel_cmu3",
        "dgraupel_cmu4",
        "dgraupel_cmu5",
        "dgraupel_alpha",
        "dgraupel_beta",
        "dgraupel_gamma",
        "dgraupel_nu",
        "dgraupel_g1",
        "dgraupel_g2",
        "dgraupel_mu",
        "dgraupel_nm1",
        "dgraupel_nm2",
        "dgraupel_nm3",
        "dgraupel_q_crit_c",
        "dgraupel_d_crit_c",
        "dgraupel_ecoll_c",
        "dgraupel_cap",
        "dgraupel_a_ven",
        "dgraupel_b_ven",
        "dgraupel_c_s",
        "dgraupel_a_f",
        "dgraupel_b_f",
        "dgraupel_alfa_n",
        "dgraupel_alfa_q",
        "dgraupel_lambda",
        "dgraupel_vsedi_min",
        "dgraupel_vsedi_max",
    ],
    "Hail": [
        "dhail_a_geo",
        "dhail_b_geo",
        "dhail_min_x",
        "dhail_min_x_act",
        "dhail_min_x_nuc_homo",
        "dhail_min_x_nuc_hetero",
        "dhail_min_x_melt",
        "dhail_min_x_evap",
        "dhail_min_x_freezing",
        "dhail_min_x_depo",
        "dhail_min_x_collision",
        "dhail_min_x_collection",
        "dhail_min_x_conversion",
        "dhail_min_x_sedimentation",
        "dhail_min_x_riming",
        "dhail_max_x",
        "dhail_sc_theta_q",
        "dhail_sc_delta_q",
        "dhail_sc_theta_n",
        "dhail_sc_delta_n",
        "dhail_s_vel",
        "dhail_a_vel",
        "dhail_b_vel",
        "dhail_rho_v",
        "dhail_c_z",
        "dhail_sc_coll_n",
        "dhail_cmu0",
        "dhail_cmu1",
        "dhail_cmu2",
        "dhail_cmu3",
        "dhail_cmu4",
        "dhail_cmu5",
        "dhail_alpha",
        "dhail_beta",
        "dhail_gamma",
        "dhail_nu",
        "dhail_g1",
        "dhail_g2",
        "dhail_mu",
        "dhail_nm1",
        "dhail_nm2",
        "dhail_nm3",
        "dhail_q_crit_c",
        "dhail_d_crit_c",
        "dhail_ecoll_c",
        "dhail_cap",
        "dhail_a_ven",
        "dhail_b_ven",
        "dhail_c_s",
        "dhail_a_f",
        "dhail_b_f",
        "dhail_alfa_n",
        "dhail_alfa_q",
        "dhail_lambda",
        "dhail_vsedi_min",
        "dhail_vsedi_max",
    ],
    "Ice": [
        "dice_a_geo",
        "dice_b_geo",
        "dice_min_x",
        "dice_min_x_act",
        "dice_min_x_nuc_homo",
        "dice_min_x_nuc_hetero",
        "dice_min_x_melt",
        "dice_min_x_evap",
        "dice_min_x_freezing",
        "dice_min_x_depo",
        "dice_min_x_collision",
        "dice_min_x_collection",
        "dice_min_x_conversion",
        "dice_min_x_sedimentation",
        "dice_min_x_riming",
        "dice_max_x",
        "dice_sc_theta_q",
        "dice_sc_delta_q",
        "dice_sc_theta_n",
        "dice_sc_delta_n",
        "dice_s_vel",
        "dice_a_vel",
        "dice_b_vel",
        "dice_rho_v",
        "dice_c_z",
        "dice_sc_coll_n",
        "dice_cmu0",
        "dice_cmu1",
        "dice_cmu2",
        "dice_cmu3",
        "dice_cmu4",
        "dice_cmu5",
        "dice_alpha",
        "dice_beta",
        "dice_gamma",
        "dice_nu",
        "dice_g1",
        "dice_g2",
        "dice_mu",
        "dice_nm1",
        "dice_nm2",
        "dice_nm3",
        "dice_q_crit_c",
        "dice_d_crit_c",
        "dice_ecoll_c",
        "dice_cap",
        "dice_a_ven",
        "dice_b_ven",
        "dice_c_s",
        "dice_a_f",
        "dice_b_f",
        "dice_alfa_n",
        "dice_alfa_q",
        "dice_lambda",
        "dice_vsedi_min",
        "dice_vsedi_max",
    ],
    "Snow": [
        "dsnow_a_geo",
        "dsnow_b_geo",
        "dsnow_min_x",
        "dsnow_min_x_act",
        "dsnow_min_x_nuc_homo",
        "dsnow_min_x_nuc_hetero",
        "dsnow_min_x_melt",
        "dsnow_min_x_evap",
        "dsnow_min_x_freezing",
        "dsnow_min_x_depo",
        "dsnow_min_x_collision",
        "dsnow_min_x_collection",
        "dsnow_min_x_conversion",
        "dsnow_min_x_sedimentation",
        "dsnow_min_x_riming",
        "dsnow_max_x",
        "dsnow_sc_theta_q",
        "dsnow_sc_delta_q",
        "dsnow_sc_theta_n",
        "dsnow_sc_delta_n",
        "dsnow_s_vel",
        "dsnow_a_vel",
        "dsnow_b_vel",
        "dsnow_rho_v",
        "dsnow_c_z",
        "dsnow_sc_coll_n",
        "dsnow_cmu0",
        "dsnow_cmu1",
        "dsnow_cmu2",
        "dsnow_cmu3",
        "dsnow_cmu4",
        "dsnow_cmu5",
        "dsnow_alpha",
        "dsnow_beta",
        "dsnow_gamma",
        "dsnow_nu",
        "dsnow_g1",
        "dsnow_g2",
        "dsnow_mu",
        "dsnow_nm1",
        "dsnow_nm2",
        "dsnow_nm3",
        "dsnow_q_crit_c",
        "dsnow_d_crit_c",
        "dsnow_ecoll_c",
        "dsnow_cap",
        "dsnow_a_ven",
        "dsnow_b_ven",
        "dsnow_c_s",
        "dsnow_a_f",
        "dsnow_b_f",
        "dsnow_alfa_n",
        "dsnow_alfa_q",
        "dsnow_lambda",
        "dsnow_vsedi_min",
        "dsnow_vsedi_max",
    ],
}

# A dictionary of physical vs non-physical parameters
in_params_phys_dic = {
    "Physical": {
        "Misc": [],
        "Rain": [],
        "Cloud": [],
        "Graupel": [],
        "Hail": [],
        "Ice": [],
        "Snow": [],
    },
    "Non-Physical": {
        "Misc": [],
        "Rain": [],
        "Cloud": [],
        "Graupel": [],
        "Hail": [],
        "Ice": [],
        "Snow": [],
    },
}

# A dictionary of descriptions for each parameter
in_params_descr_dic = {
    "da_1": "Dimensional coefficient used in one-moment warm physics for qc and qr calculation",
    "da_2": "Dimensional coefficient used in one-moment warm physics for qc and qr calculation",
    "de_1": "Dimensional coefficients used in one-moment warm physics for temperature calculation",
    "de_2": "Dimensional coefficients used in one-moment warm physics for temperature calculation",
    "dd": "Dimensional coefficient used in one-moment warm physics qr calculation for sedimentation",
    "dN_c": "Number concentration of cloud droplets needed for one-moment scheme",
    "dgamma": "Exponent used in one-moment warm physics for qc and qr calculation",
    "dbeta_c": "Exponent used in one-moment warm physics for qc and qr calculation",
    "dbeta_r": "Exponent used in one-moment warm physics for qc and qr calculation",
    "ddelta1": "Exponent used in one-moment warm physics for qv, qr, saturation and temperature calculation",
    "ddelta2": "Exponent used in one-moment warm physics for qv, qr, saturation and temperature calculation",
    "dzeta": "Exponents used in one-moment warm physics for qr calculation",
    "drain_gfak": "Coefficient for gamma evaluation in rain evaporation",
    "dcloud_k_au": "Coefficient for autoconversion of cloud to rain",
    "dcloud_k_sc": "Coefficient for autoconversion of cloud to rain",
    "dkc_autocon": "Kernel for autoconversion",
    "dinv_z": "Inverse of air parcel size (height) used in explicit sedimentation",
    "dw": "Change in buoancy",
    "dq_crit_i": "Threshold (ratio mass) for ice selfcollection",
    "dD_crit_i": "Threshold (diameter) for ice selfcollection",
    "dD_conv_i": "Threshold (diameter) for ice conversion in selfcollection",
    "dq_crit_r": "Threshold (ratio mass) for ice rain riming and snow rain riming",
    "dD_crit_r": "Threshold (diameter) for ice rain riming and snow rain riming",
    "dq_crit_fr": "Threshold (ratio mass) for rain freeze and cloud water",
    "dD_coll_c": "Upper bound for diameter in collision efficiency",
    "dq_crit": "Default threshold (ratio mass)",
    "dD_conv_sg": "Threshold (diameter) for conversion snow to graupel, ice to graupel",
    "dD_conv_ig": "Threshold (diameter) for conversion snow to graupel, ice to graupel",
    "dx_conv": "Minimum mass of conversion due to riming",
    "dparcel_height": "Height of the trajectory package",
    "dalpha_spacefilling": "Coefficient used in riming processes for enhanced melting or conversion of snow or ice to graupel",
    "dT_nuc": "Lower temperature threshold for ice nucleation",
    "dT_freeze": "Lower temperature threshold for raindrop freezing",
    "dT_f": "Lower temperature threshold for (instantaneous) raindrop freezing",
    "dD_eq": "Equilibrium diameter for Seifert & Beheng (2008), ie Eq. 20.",
    "drho_w": r"Density of liquid water in \f$ \mathrm{kg}/\mathrm{m}^3\f $",
    "drho_0": "Norm air density",
    "drho_vel": "Exponent for density correction",
    "drho_vel_c": "Exponent for density correction of cloud droplets",
    "drho_ice": r"Density of ice in $ \mathrm{kg}/\mathrm{m}^3 $",
    "dM_w": "Molar mass of water",
    "dM_a": "Molar mass of dry air",
    "dR_universal": "Universal gas constant",
    "dEpsilon": "Quotient of the individual gas constants",
    "dgravity_acc": "Gravitational acceleration",
    "dR_a": "Gas constant for dry air",
    "dR_v": "Gas constant for water vapor",
    "da_v": "Constant used in rain evaporation after Seifert (2008)",
    "db_v": "Coefficient used in rain evaporation after Seifert (2008)",
    "da_prime": "Constant used to calculate the terminal fall velocity of raindrops during rain evaporation",
    "db_prime": "Coefficient used to calculate the terminal fall velocity of raindrops during rain evaporation",
    "dc_prime": "Exponent used to calculate the terminal fall velocity of raindrops during rain evaporation",
    "dK_T": "Heat conductivity of air",
    "dL_wd": "Latent heat of evaporation of water",
    "dL_ed": " Heat of sublimination ice -> vapor",
    "dD_v": r"Diffusivity of water vapor in air at $0^\circ\mathrm{C} $",
    "decoll_min": "Min. efficiency for collisions graupel - cloud, ice - cloud, snow - cloud",
    "decoll_gg": "Collision efficiency for graupel selfcollection",
    "decoll_gg_wet": "Collision efficiency for wet graupel",
    "dkin_visc_air": "Kinematic viscosity of dry air",
    "dC_mult": "Coefficient for splintering during Hallet-Mossop ice multiplication",
    "dT_mult_min": "Coefficient used in Hallet-Mossop ice multiplication",
    "dT_mult_max": "Coefficient used in Hallet-Mossop ice multiplication",
    "dT_mult_opt": "Coefficient used in Hallet-Mossop ice multiplication",
    "dconst0": "Coefficient used in riming processes",
    "dconst3": "Coefficient used in riming processes for breaking up particles",
    "dconst4": "Coefficient used in riming processes for breaking up particles",
    "dconst5": "Coefficient used in riming processes for enhanced melting or conversion of snow or ice to graupel",
    "dD_rainfrz_gh": " Size thresholds for partitioning of freezing rain in the hail scheme",
    "dD_rainfrz_ig": "Size thresholds for partitioning of freezing rain in the hail scheme",
    "ddv0": r"Diffusivity of water vapor in air at $0^\circ\mathrm{C} $",
    "dp_sat_melt": r"Saturation pressure at $ \mathrm{T}=\mathrm{T}_\mathrm{freeze} $",
    "dcp": r"Specific heat capacity of air at constant pressure in $ \mathrm{J}/\mathrm{K}/\mathrm{kg} $",
    "dk_b": r"Boltzmann constant in $ \mathrm{J}/\mathrm{K} $",
    "da_HET": "Exponent for rain freeze with data of Barklie and Gokhale",
    "db_HET": "Coefficient for rain freeze with data of Barklie and Gokhale",
    "dN_sc": "Schmidt number",
    "dn_f": " Exponent of N_sc in the vent-coeff",
    "dN_avo": r"Avogadro number in $ \mathrm{mol}^{-1} $",
    "dna_dust": r"Initial number density of dust [$m^{-3} $]",
    "dna_soot": r"Initial number density of soot [$m^{-3} $]",
    "dna_orga": r"Initial number density of organics [$m^{-3} $]",
    "dni_het_max": r"Constants for Phillips et al. ice nucleation scheme max number of IN between $ 1^{-10} $ per liter, i.e. 1d3-10d3",
    "dni_hom_max": r"Constants for Phillips et al. ice nucleation scheme number of liquid aerosols between $ 100-5000 $ per liter",
    "da_dep": "Cons_idxeters for deposition formula (2) of Hande et al.",
    "db_dep": "Cons_idxeters for deposition formula (2) of Hande et al.",
    "dc_dep": "Parameters for deposition formula (2) of Hande et al.",
    "dd_dep": "Cons_idxeters for deposition formula (2) of Hande et al.",
    "dnim_imm": "Parameter for Hande et al. nucleation",
    "dnin_dep": "Parameter for Hande et al. nucleation",
    "dalf_imm": "Parameter for Hande et al. nucleation",
    "dbet_dep": "Parameter for Hande et al. nucleation",
    "dbet_imm": "Parameter for Hande et al. nucleation",
    "da_ccn_1": "Parameter for calculating CCN concentration during CCN activation after Hande et al 2016",
    "da_ccn_2": "Parameter for calculating CCN concentration during CCN activation after Hande et al 2016",
    "da_ccn_3": "Parameter for calculating CCN concentration during CCN activation after Hande et al 2016",
    "da_ccn_4": "Parameter for calculating CCN concentration during CCN activation after Hande et al 2016",
    "db_ccn_1": "Parameter for calculating CCN concentration during CCN activation after Hande et al 2016",
    "db_ccn_2": "Parameter for calculating CCN concentration during CCN activation after Hande et al 2016",
    "db_ccn_3": "Parameter for calculating CCN concentration during CCN activation after Hande et al 2016",
    "db_ccn_4": "Parameter for calculating CCN concentration during CCN activation after Hande et al 2016",
    "dc_ccn_1": "Parameter for calculating CCN concentration during CCN activation after Hande et al 2016",
    "dc_ccn_2": "Parameter for calculating CCN concentration during CCN activation after Hande et al 2016",
    "dc_ccn_3": "Parameter for calculating CCN concentration during CCN activation after Hande et al 2016",
    "dc_ccn_4": "Parameter for calculating CCN concentration during CCN activation after Hande et al 2016",
    "dd_ccn_1": "Parameter for calculating CCN concentration during CCN activation after Hande et al 2016",
    "dd_ccn_2": "Parameter for calculating CCN concentration during CCN activation after Hande et al 2016",
    "dd_ccn_3": "Parameter for calculating CCN concentration during CCN activation after Hande et al 2016",
    "dd_ccn_4": "Parameter for calculating CCN concentration during CCN activation after Hande et al 2016",
    "dr_const": "Parameter for saturation adjustment",
    "dr1_const": "Parameter for saturation adjustment",
    "dcv": r"Specific heat capacity of water vapor at constant pressure in $ \mathrm{J}/\mathrm{K}/\mathrm{kg} $",
    "dp_sat_const_a": "Parameter for saturation adjustment. Constant saturated water vapor pressure",
    "dp_sat_ice_const_a": "Parameter for saturation adjustment. Constant saturated ice pressure",
    "dp_sat_const_b": "Parameter for saturation adjustment. Constant saturated water vapor pressure",
    "dp_sat_ice_const_b": "Parameter for saturation adjustment. Constant saturated ice pressure",
    "dp_sat_low_temp": r"Parameter for saturation adjustment. Saturated water vapor pressure at $T = 233 $K",
    "dT_sat_low_temp": "Parameter for saturation adjustment",
    "dalpha_depo": "Depostion coefficient for homogeneous ice nucleation",
    "dr_0": "Aerosol particle radius prior to freezing used in homogeneous nucleation",
    "dk_1_conv": "Exponent for autoconversion of qc to qr",
    "dk_2_conv": "Exponent for autoconversion of qc to qr",
    "dk_1_accr": "Coefficient for accretion of qc to qr",
    "dk_r": "Coefficient for accretion of qc to qr",
    # Rain
    "drain_a_geo": "Coefficient for diameter size calculation",
    "drain_b_geo": "Exponent for diameter size calculation",
    "drain_min_x": "Minimum size of the particle used in one-moment schemes",
    "drain_min_x_act": "Not used",
    "drain_min_x_nuc_homo": "Not used",
    "drain_min_x_nuc_hetero": "Not used",
    "drain_min_x_melt": "Not used",
    "drain_min_x_evap": "Minimum size of particle for evaporation",
    "drain_min_x_freezing": "Minimum size of particle for freezing",
    "drain_min_x_depo": "Not used",
    "drain_min_x_collision": "Not used",
    "drain_min_x_collection": "Minimum size of particle for different collision processes",
    "drain_min_x_conversion": "Not used",
    "drain_min_x_sedimentation": "Minimum size of particle for sedimentation",
    "drain_min_x_riming": "Minimum size of particle for riming",
    "drain_max_x": "Maximum size of particle",
    "drain_sc_theta_q": "Not used",
    "drain_sc_delta_q": "Not used",
    "drain_sc_theta_n": "Not used",
    "drain_sc_delta_n": "Not used",
    "drain_s_vel": "Not used",
    "drain_a_vel": "Coefficient for particle velocity",
    "drain_b_vel": "Exponent for particle velocity",
    "drain_rho_v": "Coefficient used in density correction for the increased terminal fall velocity with decreasing air density",
    "drain_c_z": "Coefficient for 2nd mass moment used in freezing processes",
    "drain_sc_coll_n": "Not used",
    "drain_cmu0": r"Coefficient for calculating the shape parameter $ \mu $ during rain evaporation",
    "drain_cmu1": r"Coefficient for calculating the shape parameter $ \mu $ during rain evaporation",
    "drain_cmu2": r"Coefficient for calculating the shape parameter $ \mu $ during rain evaporation",
    "drain_cmu3": r"Constant for calculating the shape parameter $ \mu $ during rain evaporation",
    "drain_cmu4": r"Constant for calculating the shape parameter $ \mu $ during rain evaporation",
    "drain_cmu5": r"Exponent for calculating the shape parameter $ \mu $ during rain evaporation",
    "drain_alpha": "Constant in rain sedimentation",
    "drain_beta": "Coefficient for rain sedimentation",
    "drain_gamma": "Exponent for rain sedimentation",
    "drain_nu": r"Parameter to calculate the shape of the generalized $ \Gamma $-distribution",
    "drain_g1": r"Right edge of incomplete gamma function,  which had been initialized with $ \mathrm{nm}_1 $",
    "drain_g2": r"Right edge of incomplete gamma function,  which had been initialized with $ \mathrm{nm}_2 $",
    "drain_mu": r"Shape parameter of the generalized $ \Gamma $-distribution",
    "drain_nm1": "Number of bins of the incomplete gamma function lookup table 1",
    "drain_nm2": "Number of bins of the incomplete gamma function lookup table 2",
    "drain_nm3": "Number of bins of the incomplete gamma function lookup table 3",
    "drain_q_crit_c": "Not used",
    "drain_d_crit_c": "Not used",
    "drain_ecoll_c": "Not used",
    "drain_cap": "Coefficient for capacity of particle",
    "drain_a_ven": "Not used",
    "drain_b_ven": "Not used",
    "drain_c_s": "Inverse of capacity. Coefficient in evaporation and vapor deposition",
    "drain_a_f": "Constant for average ventilation. Used in melting and ice-vapor processes.",
    "drain_b_f": "Coefficient for average ventilation",
    "drain_alfa_n": "Not used",
    "drain_alfa_q": "Not used",
    "drain_lambda": "Not used",
    "drain_vsedi_min": "Not used",
    "drain_vsedi_max": "Not used",
    # Cloud
    "dcloud_a_geo": "Coefficient for diameter size calculation",
    "dcloud_b_geo": "Exponent for diameter size calculation",
    "dcloud_min_x": "Minimum size of the particle",
    "dcloud_min_x_act": "Minimum size of particle for CCN activation",
    "dcloud_min_x_nuc_homo": "Not used",
    "dcloud_min_x_nuc_hetero": "Not used",
    "dcloud_min_x_melt": "Not used",
    "dcloud_min_x_evap": "Not used",
    "dcloud_min_x_freezing": "Minimum size of particle for freezing",
    "dcloud_min_x_depo": "Not used",
    "dcloud_min_x_collision": "Not used",
    "dcloud_min_x_collection": "Not used",
    "dcloud_min_x_conversion": "Minimum size of particle for conversion processes",
    "dcloud_min_x_sedimentation": "Not used",
    "dcloud_min_x_riming": "Minimum size of particle for riming",
    "dcloud_max_x": "Maximum size of particle",
    "dcloud_sc_theta_q": "Not used",
    "dcloud_sc_delta_q": "Not used",
    "dcloud_sc_theta_n": "Not used",
    "dcloud_sc_delta_n": "Not used",
    "dcloud_s_vel": "Not used",
    "dcloud_a_vel": "Coefficient for particle velocity",
    "dcloud_b_vel": "Exponent for particle velocity",
    "dcloud_rho_v": "Coefficient used in density correction for the increased terminal fall velocity with decreasing air density",
    "dcloud_c_z": "Coefficient for 2nd mass moment",
    "dcloud_sc_coll_n": "Not used",
    "dcloud_cmu0": "Not used",
    "dcloud_cmu1": "Not used",
    "dcloud_cmu2": "Not used",
    "dcloud_cmu3": "Not used",
    "dcloud_cmu4": "Not used",
    "dcloud_cmu5": "Not used",
    "dcloud_alpha": "Not used",
    "dcloud_beta": "Not used",
    "dcloud_gamma": "Not used",
    "dcloud_nu": r"Parameter to calculate the shape parameter of the generalized $ \Gamma $-distribution",
    "dcloud_g1": "Not used",
    "dcloud_g2": "Not used",
    "dcloud_mu": r"Shape parameter of the generalized $ \Gamma $-distribution",
    "dcloud_nm1": "Not used",
    "dcloud_nm2": "Not used",
    "dcloud_nm3": "Not used",
    "dcloud_q_crit_c": "Not used",
    "dcloud_d_crit_c": "Not used",
    "dcloud_ecoll_c": "Not used",
    "dcloud_cap": "Coefficient for capacity of particle",
    "dcloud_a_ven": "Used to calculate the constant for average ventilation. Is not tracked with AD.",
    "dcloud_b_ven": "Used to calculate the constant for average ventilation. Is not tracked with AD.",
    "dcloud_c_s": "Inverse of capacity. Coefficient in evaporation and vapor deposition",
    "dcloud_a_f": "Constant for average ventilation. Used in melting and ice-vapor processes.",
    "dcloud_b_f": "Coefficient for average ventilation",
    "dcloud_alfa_n": "Not used",
    "dcloud_alfa_q": "Not used",
    "dcloud_lambda": "Not used",
    "dcloud_vsedi_min": "Not used",
    "dcloud_vsedi_max": "Not used",
    # Graupel
    "dgraupel_a_geo": "Coefficient for diameter size calculation",
    "dgraupel_b_geo": "Exponent for diameter size calculation",
    "dgraupel_min_x": "Minimum size of the particle used in one-moment schemes",
    "dgraupel_min_x_act": "Not used",
    "dgraupel_min_x_nuc_homo": "Not used",
    "dgraupel_min_x_nuc_hetero": "Not used",
    "dgraupel_min_x_melt": "Minimum size of particle for melting",
    "dgraupel_min_x_evap": "Minimum size of particle for evaporation",
    "dgraupel_min_x_freezing": "Not used",
    "dgraupel_min_x_depo": "Minimum size of particle for vapor deposition",
    "dgraupel_min_x_collision": "Not used",
    "dgraupel_min_x_collection": "Minimum size of particle for different collision processes",
    "dgraupel_min_x_conversion": "Minimum size of particle for conversion processes",
    "dgraupel_min_x_sedimentation": "Minimum size of particle for sedimentation",
    "dgraupel_min_x_riming": "Minimum size of particle for riming",
    "dgraupel_max_x": "Maximum size of particle",
    "dgraupel_sc_theta_q": "Not used",
    "dgraupel_sc_delta_q": "Not used",
    "dgraupel_sc_theta_n": "Not used",
    "dgraupel_sc_delta_n": "Not used",
    "dgraupel_s_vel": "Variance for the assumed Gaussian velocity distributions used in collection and riming processes",
    "dgraupel_a_vel": "Coefficient for particle velocity",
    "dgraupel_b_vel": "Exponent for particle velocity",
    "dgraupel_rho_v": "Coefficient used in density correction for the increased terminal fall velocity with decreasing air density",
    "dgraupel_c_z": "Coefficient for 2nd mass moment",
    "dgraupel_sc_coll_n": "Coefficient in graupel self collection and cloud riming",
    "dgraupel_cmu0": "Not used",
    "dgraupel_cmu1": "Not used",
    "dgraupel_cmu2": "Not used",
    "dgraupel_cmu3": "Not used",
    "dgraupel_cmu4": "Not used",
    "dgraupel_cmu5": "Not used",
    "dgraupel_alpha": "Not used",
    "dgraupel_beta": "Not used",
    "dgraupel_gamma": "Not used",
    "dgraupel_nu": r"Parameter to calculate the shape parameter of the generalized $ \Gamma $-distribution",
    "dgraupel_g1": r"Right edge of incomplete gamma function,  which had been initialized with $ \mathrm{nm}_1 $",
    "dgraupel_g2": r"Right edge of incomplete gamma function,  which had been initialized with $ \mathrm{nm}_2 $",
    "dgraupel_mu": r"Shape parameter of the generalized $ \Gamma $-distribution",
    "dgraupel_nm1": "Number of bins of the incomplete gamma function lookup table 1",
    "dgraupel_nm2": "Number of bins of the incomplete gamma function lookup table 2",
    "dgraupel_nm3": "Not used",
    "dgraupel_q_crit_c": "Riming parameter",
    "dgraupel_d_crit_c": "Riming parameter",
    "dgraupel_ecoll_c": "Riming coefficient. Maximum collision efficiency with cloud droplets",
    "dgraupel_cap": "Coefficient for capacity of particle",
    "dgraupel_a_ven": "Vapor deposition coefficient",
    "dgraupel_b_ven": "Not used",
    "dgraupel_c_s": "Inverse of capacity. Coefficient in evaporation and vapor deposition",
    "dgraupel_a_f": "Constant for average ventilation. Used in melting and ice-vapor processes.",
    "dgraupel_b_f": "Coefficient for average ventilation",
    "dgraupel_alfa_n": "Sedimentation velocity coefficient",
    "dgraupel_alfa_q": "Sedimentation velocity coefficient",
    "dgraupel_lambda": "Sedimentation velocity coefficient",
    "dgraupel_vsedi_min": "Minimum sedimentation velocity parameter",
    "dgraupel_vsedi_max": "Maximum sedimentation velocity parameter",
    # Hail
    "dhail_a_geo": "Coefficient for diameter size calculation",
    "dhail_b_geo": "Exponent for diameter size calculation",
    "dhail_min_x": "Minimum size of the particle used in one-moment schemes",
    "dhail_min_x_act": "Not used",
    "dhail_min_x_nuc_homo": "Not used",
    "dhail_min_x_nuc_hetero": "Not used",
    "dhail_min_x_melt": "Minimum size of particle for melting",
    "dhail_min_x_evap": "Not used",
    "dhail_min_x_freezing": "Not used",
    "dhail_min_x_depo": "Minimum size of particle for vapor deposition",
    "dhail_min_x_collision": "Not used",
    "dhail_min_x_collection": "Not used",
    "dhail_min_x_conversion": "Not used",
    "dhail_min_x_sedimentation": "Minimum size of particle for sedimentation",
    "dhail_min_x_riming": "Minimum size of particle for riming",
    "dhail_max_x": "Maximum size of particle",
    "dhail_sc_theta_q": "Not used",
    "dhail_sc_delta_q": "Not used",
    "dhail_sc_theta_n": "Not used",
    "dhail_sc_delta_n": "Not used",
    "dhail_s_vel": "Variance for the assumed Gaussian velocity distributions used in collection and riming processes",
    "dhail_a_vel": "Coefficient for particle velocity",
    "dhail_b_vel": "Exponent for particle velocity",
    "dhail_rho_v": "Coefficient used in density correction for the increased terminal fall velocity with decreasing air density",
    "dhail_c_z": "Coefficient for 2nd mass moment",
    "dhail_sc_coll_n": "Coefficient in graupel self collection and cloud riming",
    "dhail_cmu0": "Not used",
    "dhail_cmu1": "Not used",
    "dhail_cmu2": "Not used",
    "dhail_cmu3": "Not used",
    "dhail_cmu4": "Not used",
    "dhail_cmu5": "Not used",
    "dhail_alpha": "Not used",
    "dhail_beta": "Not used",
    "dhail_gamma": "Not used",
    "dhail_nu": r"Parameter to calculate the shape parameter of the generalized $ \Gamma $-distribution",
    "dhail_g1": "Not used",
    "dhail_g2": "Not used",
    "dhail_mu": r"Shape parameter of the generalized $ \Gamma $-distribution",
    "dhail_nm1": "Not used",
    "dhail_nm2": "Not used",
    "dhail_nm3": "Not used",
    "dhail_q_crit_c": "Riming parameter",
    "dhail_d_crit_c": "Riming parameter",
    "dhail_ecoll_c": "Riming coefficient. Maximum collision efficiency with cloud droplets",
    "dhail_cap": "Coefficient for capacity of particle",
    "dhail_a_ven": "Vapor deposition coefficient",
    "dhail_b_ven": "Not used",
    "dhail_c_s": "Inverse of capacity. Coefficient in evaporation and vapor deposition",
    "dhail_a_f": "Constant for average ventilation. Used in melting and ice-vapor processes.",
    "dhail_b_f": "Coefficient for average ventilation",
    "dhail_alfa_n": "Sedimentation velocity coefficient",
    "dhail_alfa_q": "Sedimentation velocity coefficient",
    "dhail_lambda": "Sedimentation velocity coefficient",
    "dhail_vsedi_min": "Minimum sedimentation velocity parameter",
    "dhail_vsedi_max": "Maximum sedimentation velocity parameter",
    # Ice
    "dice_a_geo": "Coefficient for diameter size calculation",
    "dice_b_geo": "Exponent for diameter size calculation",
    "dice_min_x": "Minimum size of the particle used in one-moment schemes",
    "dice_min_x_act": "Minimum size of particle for ice activation",
    "dice_min_x_nuc_homo": "Minimum size of particle for homogenous nucleation",
    "dice_min_x_nuc_hetero": "Minimum size of particle for heterogeneous nucleation",
    "dice_min_x_melt": "Minimum size of particle for melting",
    "dice_min_x_evap": "Minimum size of particle for evaporation",
    "dice_min_x_freezing": "Not used",
    "dice_min_x_depo": "Minimum size of particle for vapor deposition",
    "dice_min_x_collision": "Minimum size of particle for ice-ice collision",
    "dice_min_x_collection": "Minimum size of particle for different collision processes",
    "dice_min_x_conversion": "Minimum size of particle for conversion processes",
    "dice_min_x_sedimentation": "Minimum size of particle for sedimentation",
    "dice_min_x_riming": "Minimum size of particle for riming",
    "dice_max_x": "Maximum size of particle",
    "dice_sc_theta_q": "Not used",
    "dice_sc_delta_q": "Not used",
    "dice_sc_theta_n": "Coefficient for collision particle density",
    "dice_sc_delta_n": "Coefficient for collision particle density",
    "dice_s_vel": "Variance for the assumed Gaussian velocity distributions used in collection and riming processes",
    "dice_a_vel": "Coefficient for particle velocity",
    "dice_b_vel": "Exponent for particle velocity",
    "dice_rho_v": "Coefficient used in density correction for the increased terminal fall velocity with decreasing air density",
    "dice_c_z": "Coefficient for 2nd mass moment",
    "dice_sc_coll_n": "Coefficient in graupel self collection and cloud riming",
    "dice_cmu0": "Not used",
    "dice_cmu1": "Not used",
    "dice_cmu2": "Not used",
    "dice_cmu3": "Not used",
    "dice_cmu4": "Not used",
    "dice_cmu5": "Not used",
    "dice_alpha": "Not used",
    "dice_beta": "Not used",
    "dice_gamma": "Not used",
    "dice_nu": r"Parameter to calculate the shape parameter of the generalized $ \Gamma $-distribution",
    "dice_g1": "Not used",
    "dice_g2": "Not used",
    "dice_mu": r"Shape parameter of the generalized $ \Gamma $-distribution",
    "dice_nm1": "Not used",
    "dice_nm2": "Not used",
    "dice_nm3": "Not used",
    "dice_q_crit_c": "Riming parameter",
    "dice_d_crit_c": "Riming parameter",
    "dice_ecoll_c": "Riming coefficient. Maximum collision efficiency with cloud droplets",
    "dice_cap": "Coefficient for capacity of particle",
    "dice_a_ven": "Vapor deposition coefficient",
    "dice_b_ven": "Not used",
    "dice_c_s": "Inverse of capacity. Coefficient in evaporation and vapor deposition",
    "dice_a_f": "Constant for average ventilation. Used in melting and ice-vapor processes.",
    "dice_b_f": "Coefficient for average ventilation",
    "dice_alfa_n": "Sedimentation velocity coefficient",
    "dice_alfa_q": "Sedimentation velocity coefficient",
    "dice_lambda": "Sedimentation velocity coefficient",
    "dice_vsedi_min": "Minimum sedimentation velocity parameter",
    "dice_vsedi_max": "Maximum sedimentation velocity parameter",
    # Snow
    "dsnow_a_geo": "Coefficient for diameter size calculation",
    "dsnow_b_geo": "Exponent for diameter size calculation",
    "dsnow_min_x": "Minimum size of the particle used in one-moment schemes",
    "dsnow_min_x_act": "Not used",
    "dsnow_min_x_nuc_homo": "Not used",
    "dsnow_min_x_nuc_hetero": "Not used",
    "dsnow_min_x_melt": "Minimum size of particle for melting",
    "dsnow_min_x_evap": "Minimum size of particle for evaporation",
    "dsnow_min_x_freezing": "Not used",
    "dsnow_min_x_depo": "Minimum size of particle for vapor deposition",
    "dsnow_min_x_collision": "Not used",
    "dsnow_min_x_collection": "Minimum size of particle for different collision processes",
    "dsnow_min_x_conversion": "Not used",
    "dsnow_min_x_sedimentation": "Minimum size of particle for sedimentation",
    "dsnow_min_x_riming": "Minimum size of particle for riming",
    "dsnow_max_x": "Maximum size of particle",
    "dsnow_sc_theta_q": "Not used",
    "dsnow_sc_delta_q": "Not used",
    "dsnow_sc_theta_n": "Coefficient for collision particle density",
    "dsnow_sc_delta_n": "Coefficient for collision particle density",
    "dsnow_s_vel": "Variance for the assumed Gaussian velocity distributions used in collection and riming processes",
    "dsnow_a_vel": "Coefficient for particle velocity",
    "dsnow_b_vel": "Exponent for particle velocity",
    "dsnow_rho_v": "Coefficient used in density correction for the increased terminal fall velocity with decreasing air density",
    "dsnow_c_z": "Coefficient for 2nd mass moment",
    "dsnow_sc_coll_n": "Coefficient in graupel self collection and cloud riming",
    "dsnow_cmu0": "Not used",
    "dsnow_cmu1": "Not used",
    "dsnow_cmu2": "Not used",
    "dsnow_cmu3": "Not used",
    "dsnow_cmu4": "Not used",
    "dsnow_cmu5": "Not used",
    "dsnow_alpha": "Not used",
    "dsnow_beta": "Not used",
    "dsnow_gamma": "Not used",
    "dsnow_nu": r"Parameter to calculate the shape parameter of the generalized $ \Gamma $-distribution",
    "dsnow_g1": "Not used",
    "dsnow_g2": "Not used",
    "dsnow_mu": r"Shape parameter of the generalized $ \Gamma $-distribution",
    "dsnow_nm1": "Not used",
    "dsnow_nm2": "Not used",
    "dsnow_nm3": "Not used",
    "dsnow_q_crit_c": "Riming parameter",
    "dsnow_d_crit_c": "Riming parameter",
    "dsnow_ecoll_c": "Riming coefficient. Maximum collision efficiency with cloud droplets",
    "dsnow_cap": "Coefficient for capacity of particle",
    "dsnow_a_ven": "Vapor deposition coefficient",
    "dsnow_b_ven": "Not used",
    "dsnow_c_s": "Inverse of capacity. Coefficient in evaporation and vapor deposition",
    "dsnow_a_f": "Constant for average ventilation. Used in melting and ice-vapor processes.",
    "dsnow_b_f": "Coefficient for average ventilation",
    "dsnow_alfa_n": "Sedimentation velocity coefficient",
    "dsnow_alfa_q": "Sedimentation velocity coefficient",
    "dsnow_lambda": "Sedimentation velocity coefficient",
    "dsnow_vsedi_min": "Minimum sedimentation velocity parameter",
    "dsnow_vsedi_max": "Maximum sedimentation velocity parameter",
}

# grouping input parameters (not a true grouping but rather for convenience)
in_params_grouping = {
    "artificial": [
        "drain_gfak",
        "dcloud_k_au",
        "dcloud_k_sc",
        "dkc_autocon",
        "dinv_z",
        "dalpha_spacefilling",
        "dD_eq",
        "drho_vel",
        "drho_vel_c",
        "da_v",
        "db_v",
        "da_prime",
        "db_prime",
        "dc_prime",
        "decoll_min",
        "dC_mult",
        "dT_mult_min",
        "dT_mult_max",
        "dT_mult_opt",
        "dconst0",
        "dconst3",
        "dconst4",
        "dconst5",
        "da_HET",
        "db_HET",
        "da_dep",
        "db_dep",
        "dc_dep",
        "dd_dep",
        "dnim_imm",
        "dnin_dep",
        "dalf_imm",
        "dbet_dep",
        "dbet_imm",
        "dr_const",
        "dr1_const",
        "dp_sat_const_a",
        "dp_sat_ice_const_a",
        "dp_sat_const_b",
        "dp_sat_ice_const_b",
        "dp_sat_low_temp",
        "dT_sat_low_temp",
        "dalpha_depo",
        "dk_1_conv",
        "dk_2_conv",
        "dk_1_accr",
        "dk_r",
        "da_ccn_1",
        "da_ccn_2",
        "da_ccn_3",
        "da_ccn_4",
        "db_ccn_1",
        "db_ccn_2",
        "db_ccn_3",
        "db_ccn_4",
        "dc_ccn_1",
        "dc_ccn_2",
        "dc_ccn_3",
        "dc_ccn_4",
        "dd_ccn_1",
        "dd_ccn_2",
        "dd_ccn_3",
        "dd_ccn_4",
        "drain_c_z",
        "drain_cmu0",
        "drain_cmu1",
        "drain_cmu2",
        "drain_cmu3",
        "drain_cmu4",
        "drain_cmu5",
        "drain_g1",
        "drain_g2",
        "drain_nm1",
        "drain_nm2",
        "drain_nm3",
        "drain_a_f",
        "drain_b_f",
        "dcloud_c_z",
        "dcloud_a_f",
        "dcloud_b_f",
        "dgraupel_s_vel",
        "dgraupel_c_z",
        "dgraupel_sc_coll_n",
        "dgraupel_g1",
        "dgraupel_g2",
        "dgraupel_nm1",
        "dgraupel_nm2",
        "dgraupel_q_crit_c",
        "dgraupel_d_crit_c",
        "dgraupel_ecoll_c",
        "dgraupel_a_f",
        "dgraupel_b_f",
        "dhail_s_vel",
        "dhail_c_z",
        "dhail_sc_coll_n",
        "dhail_q_crit_c",
        "dhail_d_crit_c",
        "dhail_ecoll_c",
        "dhail_a_f",
        "dhail_b_f",
        "dice_sc_theta_n",
        "dice_sc_delta_n",
        "dice_s_vel",
        "dice_rho_v",
        "dice_c_z",
        "dice_sc_coll_n",
        "dice_q_crit_c",
        "dice_d_crit_c",
        "dsnow_a_geo",
        "dsnow_b_geo",
        "dsnow_sc_theta_n",
        "dsnow_sc_delta_n",
        "dsnow_s_vel",
        "dsnow_c_z",
        "dsnow_sc_coll_n",
        "dsnow_q_crit_c",
        "dsnow_d_crit_c",
        "dsnow_ecoll_c",
        "dsnow_a_f",
        "dsnow_b_f",
    ],
    "artificial (threshold)": [
        "dq_crit_i",
        "dD_crit_i",
        "dD_conv_i",
        "dq_crit_r",
        "dD_crit_r",
        "dq_crit_fr",
        "dD_coll_c",
        "dq_crit",
        "dD_conv_sg",
        "dD_conv_ig",
        "dx_conv",
        "dD_rainfrz_gh",
        "dD_rainfrz_ig",
        "dni_het_max",
        "dni_hom_max",
        "drain_min_x",
        "drain_min_x_evap",
        "drain_min_x_freezing",
        "drain_min_x_collection",
        "drain_min_x_sedimentation",
        "drain_min_x_riming",
        "drain_max_x",
        "dcloud_min_x",
        "dcloud_min_x_act",
        "dcloud_min_x_freezing",
        "dcloud_min_x_conversion",
        "dcloud_min_x_riming",
        "dcloud_max_x",
        "dgraupel_min_x",
        "dgraupel_min_x_melt",
        "dgraupel_min_x_evap",
        "dgraupel_min_x_depo",
        "dgraupel_min_x_collection",
        "dgraupel_min_x_conversion",
        "dgraupel_min_x_sedimentation",
        "dgraupel_min_x_riming",
        "dgraupel_max_x",
        "dgraupel_vsedi_min",
        "dgraupel_vsedi_max",
        "dhail_min_x",
        "dhail_min_x_melt",
        "dhail_min_x_depo",
        "dhail_min_x_sedimentation",
        "dhail_min_x_riming",
        "dhail_max_x",
        "dhail_vsedi_min",
        "dhail_vsedi_max",
        "dice_min_x",
        "dice_min_x_act",
        "dice_min_x_nuc_homo",
        "dice_min_x_nuc_hetero",
        "dice_min_x_melt",
        "dice_min_x_evap",
        "dice_min_x_depo",
        "dice_min_x_collision",
        "dice_min_x_collection",
        "dice_min_x_conversion",
        "dice_min_x_sedimentation",
        "dice_min_x_riming",
        "dice_max_x",
        "dice_vsedi_min",
        "dice_vsedi_max",
        "dsnow_min_x",
        "dsnow_min_x_melt",
        "dsnow_min_x_evap",
        "dsnow_min_x_depo",
        "dsnow_min_x_collection",
        "dsnow_min_x_sedimentation",
        "dsnow_min_x_riming",
        "dsnow_max_x",
        "dsnow_vsedi_min",
        "dsnow_vsedi_max",
    ],
    "physical": [
        "dw",
        "dparcel_height",
        "dT_nuc",
        "dT_freeze",
        "dT_f",
        "drho_w",
        "drho_0",
        "drho_ice",
        "dM_w",
        "dM_a",
        "dR_universal",
        "dEpsilon",
        "dgravity_acc",
        "dR_a",
        "dR_v",
        "dK_T",
        "dL_wd",
        "dL_ed",
        "dD_v",
        "decoll_gg",
        "decoll_gg_wet",
        "dkin_visc_air",
        "ddv0",
        "dp_sat_melt",
        "dcp",
        "dk_b",
        "dN_sc",
        "dn_f",
        "dN_avo",
        "dcv",
        "drain_rho_v",
        "dhail_rho_v",
        "dsnow_rho_v",
    ],
    "physical (high variability)": [
        "dna_dust",
        "dna_soot",
        "dna_orga",
        "dr_0",
        "drain_a_geo",
        "drain_b_geo",
        "drain_a_vel",
        "drain_b_vel",
        "drain_alpha",
        "drain_beta",
        "drain_gamma",
        "drain_nu",
        "drain_mu",
        "drain_cap",
        "drain_c_s",
        "dcloud_a_geo",
        "dcloud_b_geo",
        "dcloud_a_vel",
        "dcloud_b_vel",
        "dcloud_rho_v",
        "dcloud_nu",
        "dcloud_mu",
        "dcloud_cap",
        "dcloud_c_s",
        "dgraupel_a_geo",
        "dgraupel_b_geo",
        "dgraupel_a_vel",
        "dgraupel_b_vel",
        "dgraupel_rho_v",
        "dgraupel_nu",
        "dgraupel_mu",
        "dgraupel_cap",
        "dgraupel_a_ven",
        "dgraupel_c_s",
        "dgraupel_alfa_n",
        "dgraupel_alfa_q",
        "dgraupel_lambda",
        "dhail_a_geo",
        "dhail_b_geo",
        "dhail_a_vel",
        "dhail_b_vel",
        "dhail_nu",
        "dhail_mu",
        "dhail_cap",
        "dhail_a_ven",
        "dhail_c_s",
        "dhail_alfa_n",
        "dhail_alfa_q",
        "dhail_lambda",
        "dice_a_geo",
        "dice_b_geo",
        "dice_a_vel",
        "dice_b_vel",
        "dice_nu",
        "dice_mu",
        "dice_ecoll_c",
        "dice_cap",
        "dice_a_ven",
        "dice_c_s",
        "dice_a_f",
        "dice_b_f",
        "dice_alfa_n",
        "dice_alfa_q",
        "dice_lambda",
        "dsnow_a_vel",
        "dsnow_b_vel",
        "dsnow_nu",
        "dsnow_mu",
        "dsnow_cap",
        "dsnow_a_ven",
        "dsnow_c_s",
        "dsnow_alfa_n",
        "dsnow_alfa_q",
        "dsnow_lambda",
    ],
    "1-moment": [
        "da_1",
        "da_2",
        "de_1",
        "de_2",
        "dd",
        "dN_c",
        "dgamma",
        "dbeta_c",
        "dbeta_r",
        "ddelta1",
        "ddelta2",
        "dzeta",
    ],
}


def parse_word(word):
    """
    Parse a name of a derivative and return it in a latex conform type.

    Parameters
    ----------
    word : string or list like
        Word or iterable to parse.

    Returns
    -------
    string
        String (or list of strings) to use with latex. If a formula has been detected, '$' will
        be added.
    """

    def __parse_word(word):
        subscript_no_math = ["snow", "graupel", "rain", "ice", "cloud", "hail", "vapor"]
        no_math = ["geo", "min", "max", "ven", "vel"]
        math_keys = [
            "alpha",
            "gamma",
            "beta",
            "delta",
            "zeta",
            "rho",
            "nu",
            "mu",
            "lambda",
            "theta",
        ]
        long_words = {
            "freezing": "frz",
            "collection": "coll",
            "collision": "coli",
            "sedimentation": "sed",
            "conversion": "con",
            "deposition": "dep",
            "homogenous": "hom",
            "heterogenous": "het",
        }
        if word in mappings:
            return mappings[word]
        if "_ccn_" in word:
            return r"$ \partial " + word[1] + r"_{\mathrm{ccn}, " + word[-1] + r"} $"
        for l in long_words:
            if l in word:
                word = word.replace(l, long_words[l])
        # The first "d" shall be a derivative symbol
        word = r"\partial " + word[1::]

        word = word.replace("delta_", "delta ")
        # Check for this typo
        word = word.replace("alfa", "alpha")
        # if any of words is in there, make it to subscript
        for w in subscript_no_math:
            if w in word:
                parts = word.split(" ")
                start = parts[0]
                parts = parts[1].split("_")
                if len(parts) == 4:
                    word = (
                        start
                        + " "
                        + parts[2]
                        + r"_{"
                        + parts[1]
                        + r", \mathrm{"
                        + parts[0]
                        + r","
                        + parts[3]
                        + r"}}"
                    )

                elif len(parts) == 3:
                    word = (
                        start
                        + " "
                        + parts[2]
                        + r"_{"
                        + parts[1]
                        + r", \mathrm{"
                        + parts[0]
                        + r"}}"
                    )
                else:
                    word = (
                        start + " " + parts[1] + r"_{" + r"\mathrm{" + parts[0] + r"}}"
                    )

                break
        word = r"$" + word + r" $"
        for w in no_math:
            word = word.replace(w, r"\mathrm{" + w + r"}")
        for w in math_keys:
            word = word.replace(w, "\\" + w)
        if "nuc" in word:
            word = word.replace("\\nuc", "nuc")
        return word

    if isinstance(word, str):
        return __parse_word(word)
    else:
        return [__parse_word(w) for w in word]


in_params_numeric_value_dic = {
    "da_1": 0.001,  # Not relevant for two-moment scheme
    "da_2": 0.0121568,  # Not relevant for two-moment scheme
    "de_1": 0.0590233,  # Not relevant for two-moment scheme
    "de_2": 0.185865,  # Not relevant for two-moment scheme
    "dd": 0.0147626,  # Not relevant for two-moment scheme
    "dN_c": 50,  # Not relevant for two-moment scheme
    "dgamma": 1.0,  # Not relevant for two-moment scheme
    "dbeta_c": 1.0,  # Not relevant for two-moment scheme
    "dbeta_r": 7 / 8,  # Not relevant for two-moment scheme
    "ddelta1": 0.5,  # Not relevant for two-moment scheme
    "ddelta2": 11 / 16,  # Not relevant for two-moment scheme
    "dzeta": 9 / 8,  # Not relevant for two-moment scheme
    "dd_scale": 0.0147626,
    "dScaling factor": 1,
    "dd_ccn_4": 3.60849e08,
    "dd_ccn_3": 0.890749,
    "dd_ccn_2": 0.625881,
    "dd_ccn_1": 2.87736e08,
    "dc_ccn_1": 16.242,
    "db_ccn_4": 0.000198616,
    "db_ccn_1": 0.000198405,
    "dk_r": 5.78,
    "dk_2_conv": 0.7,
    "dalpha_depo": 0.5,
    "db_ccn_3": 0.000184323,
    "dp_sat_low_temp": 610.78,
    "dp_sat_ice_const_b": 7.66,
    "dp_sat_const_a": 17.2694,
    "dr_const": 287.04,
    "da_ccn_2": 0.101474,
    "dbet_dep": 1.4705,
    "dnim_imm": 49920,
    "dd_dep": 0.26789,
    "dr_0": 2.5e-07,
    "dc_dep": -1.3107,
    "dr1_const": 461.5,
    "da_dep": 0.27626,
    "da_ccn_4": 2.2919e08,
    "dni_hom_max": 5e06,
    "dna_orga": 3e07,
    "dcv": 718.66,
    "dna_dust": 1.6e06,
    "db_ccn_2": 4.47319e-05,
    "dN_avo": 6.02214e23,
    "dN_sc": 0.71,
    "da_ccn_1": 1.83231e08,
    "da_HET": 0.65,
    "da_ccn_3": -0.29224,
    "dalf_imm": 0.2622,
    "dnin_dep": 77167,
    "dk_b": 1.38065e-23,
    "dD_rainfrz_gh": 0.00125,
    "dD_rainfrz_ig": 0.0005,
    "dp_sat_ice_const_a": 21.8746,
    "dconst3": 0.333333,
    "dT_sat_low_temp": 273.15,
    "dconst5": 0.0109087,
    "dT_mult_opt": 268,
    "dT_mult_min": 265,
    "dC_mult": 3.5e08,
    "dc_ccn_3": 13.8499,
    "dkin_visc_air": 1.5e-05,
    "decoll_gg_wet": 0.4,
    "decoll_gg": 0.1,
    "dL_ed": 2.8345e06,
    "dL_wd": 2.5008e06,
    "dK_T": 0.024,
    "dk_1_accr": 0.0005,
    "db_v": 0.308,
    "da_v": 0.78,
    "dR_v": 461.523,
    "dgravity_acc": 9.80665,
    "db_dep": 6.21,
    "dR_universal": 8.31446,
    "dcp": 1004.64,
    "dD_v": 2.22e-05,
    "dM_a": 0.0289655,
    "drho_ice": 916.7,
    "dc_ccn_4": 16.2462,
    "db_HET": 200,
    "drho_vel_c": 1,
    "drho_vel": 0.4,
    "dp_sat_melt": 610.78,
    "drho_0": 1.225,
    "drho_w": 1000,
    "dD_eq": 0.0011,
    "dT_f": 233,
    "dT_freeze": 273.15,
    "dni_het_max": 500000,
    "dconst4": -0.5,
    "dT_nuc": 268.15,
    "dalpha_spacefilling": 0.01,
    "dparcel_height": 250,
    "dx_conv": 1e-10,
    "dD_conv_ig": 0.0002,
    "dM_w": 0.0180153,
    "dD_conv_sg": 0.0002,
    "dq_crit": 1e-07,
    "dq_crit_fr": 1e-06,
    "dna_soot": 2.5e07,
    "dn_f": 0.333,
    "dD_crit_r": 0.0001,
    "dq_crit_r": 1e-05,
    "dD_conv_i": 7.5e-05,
    "dk_1_conv": 400,
    "dT_mult_max": 270,
    "dD_crit_i": 0.0001,
    "dq_crit_i": 1e-06,
    "ddw": 0.000159454,
    "db_prime": 9.8,
    "dinv_z": 0.004,
    "dkc_autocon": 9.44e09,
    "dcloud_k_sc": 1.888e10,
    "dcloud_k_au": 1.45231e19,
    "drain_gfak": 1,
    "dbet_imm": 1.2044,
    "dzeta": 1.125,
    "ddelta2": 0.6875,
    "decoll_min": 0.01,
    "dc_prime": 600,
    "dEpsilon": 0.621957,
    "ddelta1": 0.5,
    "da_prime": 9.65,
    "dbeta_r": 0.875,
    "dbeta_c": 1,
    "dc_ccn_2": 3.22012,
    "dgamma": 1,
    "dN_c": 0,
    "dd": 0,
    "dp_sat_const_b": 35.86,
    "dR_a": 287.047,
    "de_2": 0,
    "ddv0": 2.22e-05,
    "dconst0": 33333.3,
    "dD_coll_c": 4e-05,
    "de_1": 0,
    "da_2": 0,
    "da_1": 0,
    "da_geo": 0.1366,
    "db_geo": 0.333333,
    "dmin_x": 2.6e-09,
    "dmax_x": 0.0005,
    "dsc_theta_q": 0,
    "dsc_delta_q": 0,
    "dsc_theta_n": 0,
    "dsc_delta_n": 0,
    "ds_vel": 0,
    "da_vel": 39.3,
    "db_vel": 0.166667,
    "drho_v": 0,
    "dc_z": 2.94643,
    "dsc_coll_n": 1,
    "dnu": 1,
    "dmu": 0.333333,
    "dq_crit_c": 1e-06,
    "dd_crit_c": 0.0001,
    "decoll_c": 1,
    "dcap": 2,
    "da_ven": 0.78,
    "db_ven": 0.308,
    "dc_s": 0.5,
    "da_f": 0.673182,
    "db_f": 60.7445,
    "db_f (COSMO variant)": 0.263684,
    "dalfa_n": 0,
    "dalfa_q": 0,
    "dlambda": 0,
    "dvsedi_min": 0.1,
    "dvsedi_max": 30,
    "dg1": 0,
    "dg2": 0,
    "dcloud_vsedi_max": 1,
    "dcloud_vsedi_min": 0,
    "dcloud_lambda": 0,
    "dcloud_alfa_n": 0,
    "dcloud_a_ven": 0.78,
    "dcloud_d_crit_c": 1e-05,
    "dcloud_q_crit_c": 1e-06,
    "dcloud_b_ven": 0.308,
    "dcloud_nm3": 0,
    "dcloud_nm2": 0,
    "dcloud_nm1": 0,
    "dcloud_ecoll_c": 0,
    "dcloud_g2": 0,
    "dcloud_c_s": 0.5,
    "dcloud_g1": 0,
    "dcloud_gamma": 0,
    "dcloud_beta": 0,
    "dcloud_alpha": 0,
    "dcloud_cmu5": 0,
    "dcloud_nu": 1,
    "dcloud_cmu3": 0,
    "dcloud_cmu2": 0,
    "dcloud_cmu1": 0,
    "dcloud_b_f": 68.6733,
    "dcloud_c_z": 1.5,
    "dcloud_rho_v": 0,
    "dcloud_sc_coll_n": 0,
    "dcloud_b_vel": 0.666667,
    "dcloud_cmu0": 0,
    "dcloud_s_vel": 0,
    "dcloud_sc_delta_n": 0,
    "dcloud_sc_delta_q": 0,
    "dcloud_mu": 1,
    "dcloud_sc_theta_q": 0,
    "dcloud_alfa_q": 0,
    "dcloud_max_x": 2.6e-10,
    "dcloud_min_x_sedimentation": 4.2e-15,
    "dcloud_a_f": 0.737109,
    "dcloud_min_x_conversion": 4.2e-15,
    "dcloud_min_x_collection": 4.2e-15,
    "dcloud_min_x_collision": 4.2e-15,
    "dcloud_min_x_depo": 4.2e-15,
    "dcloud_min_x_riming": 4.2e-15,
    "dcloud_min_x_freezing": 4.2e-15,
    "dcloud_cap": 2,
    "dcloud_cmu4": 0,
    "dcloud_min_x_evap": 4.2e-15,
    "dcloud_min_x_melt": 4.2e-15,
    "dcloud_min_x_nuc_hetero": 4.2e-15,
    "dcloud_min_x": 4.2e-15,
    "dcloud_min_x_nuc_homo": 4.2e-15,
    "dcloud_b_geo": 0.333333,
    "dcloud_a_vel": 375000,
    "dcloud_sc_theta_n": 0,
    "dcloud_min_x_act": 4.2e-15,
    "dcloud_a_geo": 0.124,
    "drain_vsedi_max": 20,
    "drain_vsedi_min": 0.1,
    "drain_lambda": 0,
    "drain_alfa_n": 0,
    "drain_a_ven": 0,
    "drain_d_crit_c": 0,
    "drain_q_crit_c": 0,
    "drain_b_ven": 0,
    "drain_nm3": 7,
    "drain_nm2": 4,
    "drain_nm1": 1,
    "drain_ecoll_c": 0,
    "drain_g2": 6,
    "drain_c_s": 0.5,
    "drain_g1": 1,
    "drain_gamma": 622.2,
    "drain_beta": 9.623,
    "drain_alpha": 9.292,
    "drain_cmu5": 2,
    "drain_nu": -0.666667,
    "drain_cmu3": 0.0011,
    "drain_cmu2": 1000,
    "drain_cmu1": 30,
    "drain_b_f": 0,
    "drain_c_z": 20,
    "drain_rho_v": 0,
    "drain_sc_coll_n": 0,
    "drain_b_vel": 0.23437,
    "drain_cmu0": 6,
    "drain_s_vel": 0,
    "drain_sc_delta_n": 0,
    "drain_sc_delta_q": 0,
    "drain_mu": 0.333333,
    "drain_sc_theta_q": 0,
    "drain_alfa_q": 0,
    "drain_max_x": 3e-06,
    "drain_min_x_sedimentation": 2.6e-10,
    "drain_a_f": 0,
    "drain_min_x_conversion": 2.6e-10,
    "drain_min_x_collection": 2.6e-10,
    "drain_min_x_collision": 2.6e-10,
    "drain_min_x_depo": 2.6e-10,
    "drain_min_x_riming": 2.6e-10,
    "drain_min_x_freezing": 2.6e-10,
    "drain_cap": 2,
    "drain_cmu4": 1,
    "drain_min_x_evap": 2.6e-10,
    "drain_min_x_melt": 2.6e-10,
    "drain_min_x_nuc_hetero": 2.6e-10,
    "drain_min_x": 2.6e-10,
    "drain_min_x_nuc_homo": 2.6e-10,
    "drain_b_geo": 0.333333,
    "drain_a_vel": 114.014,
    "drain_sc_theta_n": 0,
    "drain_min_x_act": 2.6e-10,
    "drain_a_geo": 0.124,
    "dice_vsedi_max": 3,
    "dice_vsedi_min": 0,
    "dice_lambda": 0,
    "dice_alfa_n": 0,
    "dice_a_ven": 0.78,
    "dice_d_crit_c": 0.00015,
    "dice_q_crit_c": 1e-05,
    "dice_b_ven": 0.308,
    "dice_nm3": 0,
    "dice_nm2": 0,
    "dice_nm1": 0,
    "dice_ecoll_c": 0.8,
    "dice_g2": 0,
    "dice_c_s": 0.5,
    "dice_g1": 0,
    "dice_gamma": 0,
    "dice_beta": 0,
    "dice_alpha": 0,
    "dice_cmu5": 0,
    "dice_nu": 1,
    "dice_cmu3": 0,
    "dice_cmu2": 0,
    "dice_cmu1": 0,
    "dice_b_f": 62.0574,
    "dice_c_z": 2.94643,
    "dice_rho_v": 0,
    "dice_sc_coll_n": 0.8,
    "dice_b_vel": 0.21579,
    "dice_cmu0": 0,
    "dice_s_vel": 0.05,
    "dice_sc_delta_n": 3.26042,
    "dice_sc_delta_q": 5.39197,
    "dice_mu": 0.333333,
    "dice_sc_theta_q": 0.193013,
    "dice_alfa_q": 0,
    "dice_max_x": 1e-05,
    "dice_min_x_sedimentation": 1e-12,
    "dice_a_f": 0.667109,
    "dice_min_x_conversion": 1e-12,
    "dice_min_x_collection": 1e-12,
    "dice_min_x_collision": 1e-12,
    "dice_min_x_depo": 1e-12,
    "dice_min_x_riming": 1e-12,
    "dice_min_x_freezing": 1e-12,
    "dice_cap": 2,
    "dice_cmu4": 0,
    "dice_min_x_evap": 1e-12,
    "dice_min_x_melt": 1e-12,
    "dice_min_x_nuc_hetero": 1e-12,
    "dice_min_x": 1e-12,
    "dice_min_x_nuc_homo": 1e-12,
    "dice_b_geo": 0.39,
    "dice_a_vel": 27.7,
    "dice_sc_theta_n": 0.124677,
    "dice_min_x_act": 1e-12,
    "dice_a_geo": 0.835,
    "dsnow_vsedi_max": 3,
    "dsnow_vsedi_min": 0.1,
    "dsnow_lambda": 0,
    "dsnow_alfa_n": 0,
    "dsnow_a_ven": 0.78,
    "dsnow_d_crit_c": 0.00015,
    "dsnow_q_crit_c": 1e-05,
    "dsnow_b_ven": 0.308,
    "dsnow_nm3": 0,
    "dsnow_nm2": 0,
    "dsnow_nm1": 0,
    "dsnow_ecoll_c": 0.8,
    "dsnow_g2": 0,
    "dsnow_c_s": 0.5,
    "dsnow_g1": 0,
    "dsnow_gamma": 0,
    "dsnow_beta": 0,
    "dsnow_alpha": 0,
    "dsnow_cmu5": 0,
    "dsnow_nu": 1,
    "dsnow_cmu3": 0,
    "dsnow_cmu2": 0,
    "dsnow_cmu1": 0,
    "dsnow_b_f": 63.268,
    "dsnow_c_z": 2.94643,
    "dsnow_rho_v": 0,
    "dsnow_sc_coll_n": 0.8,
    "dsnow_b_vel": 0.15,
    "dsnow_cmu0": 0,
    "dsnow_s_vel": 0.25,
    "dsnow_sc_delta_n": 3.35045,
    "dsnow_sc_delta_q": 0,
    "dsnow_mu": 0.333333,
    "dsnow_sc_theta_q": 0,
    "dsnow_alfa_q": 0,
    "dsnow_max_x": 2e-05,
    "dsnow_min_x_sedimentation": 1e-10,
    "dsnow_a_f": 0.663731,
    "dsnow_min_x_conversion": 1e-10,
    "dsnow_min_x_collection": 1e-10,
    "dsnow_min_x_collision": 1e-10,
    "dsnow_min_x_depo": 1e-10,
    "dsnow_min_x_riming": 1e-10,
    "dsnow_min_x_freezing": 1e-10,
    "dsnow_cap": 2,
    "dsnow_cmu4": 0,
    "dsnow_min_x_evap": 1e-10,
    "dsnow_min_x_melt": 1e-10,
    "dsnow_min_x_nuc_hetero": 1e-10,
    "dsnow_min_x": 1e-10,
    "dsnow_min_x_nuc_homo": 1e-10,
    "dsnow_b_geo": 0.455,
    "dsnow_a_vel": 8.8,
    "dsnow_sc_theta_n": 0.0562866,
    "dsnow_min_x_act": 1e-10,
    "dsnow_a_geo": 2.4,
    "dgraupel_vsedi_max": 30,
    "dgraupel_vsedi_min": 0.1,
    "dgraupel_lambda": 0,
    "dgraupel_alfa_n": 0,
    "dgraupel_a_ven": 0.78,
    "dgraupel_d_crit_c": 0.0001,
    "dgraupel_q_crit_c": 1e-06,
    "dgraupel_b_ven": 0.308,
    "dgraupel_nm3": 0,
    "dgraupel_nm2": 9,
    "dgraupel_nm1": 6,
    "dgraupel_ecoll_c": 1,
    "dgraupel_g2": 40320,
    "dgraupel_c_s": 0.5,
    "dgraupel_g1": 120,
    "dgraupel_gamma": 0,
    "dgraupel_beta": 0,
    "dgraupel_alpha": 0,
    "dgraupel_cmu5": 0,
    "dgraupel_nu": 1,
    "dgraupel_cmu3": 0,
    "dgraupel_cmu2": 0,
    "dgraupel_cmu1": 0,
    "dgraupel_b_f": 60.9328,
    "dgraupel_c_z": 2.94643,
    "dgraupel_rho_v": 0,
    "dgraupel_sc_coll_n": 0.563476,
    "dgraupel_b_vel": 0.268325,
    "dgraupel_cmu0": 0,
    "dgraupel_s_vel": 0,
    "dgraupel_sc_delta_n": 0,
    "dgraupel_sc_delta_q": 0,
    "dgraupel_mu": 0.333333,
    "dgraupel_sc_theta_q": 0,
    "dgraupel_alfa_q": 0,
    "dgraupel_max_x": 0.0005,
    "dgraupel_min_x_sedimentation": 1e-09,
    "dgraupel_a_f": 0.675949,
    "dgraupel_min_x_conversion": 1e-09,
    "dgraupel_min_x_collection": 1e-09,
    "dgraupel_min_x_collision": 1e-09,
    "dgraupel_min_x_depo": 1e-09,
    "dgraupel_min_x_riming": 1e-09,
    "dgraupel_min_x_freezing": 1e-09,
    "dgraupel_cap": 2,
    "dgraupel_cmu4": 0,
    "dgraupel_min_x_evap": 1e-09,
    "dgraupel_min_x_melt": 1e-09,
    "dgraupel_min_x_nuc_hetero": 1e-09,
    "dgraupel_min_x": 1e-09,
    "dgraupel_min_x_nuc_homo": 1e-09,
    "dgraupel_b_geo": 0.314,
    "dgraupel_a_vel": 86.8937,
    "dgraupel_sc_theta_n": 0,
    "dgraupel_min_x_act": 1e-09,
    "dgraupel_a_geo": 0.142,
    "dhail_vsedi_max": 30,
    "dhail_vsedi_min": 0.1,
    "dhail_lambda": 0,
    "dhail_alfa_n": 0,
    "dhail_a_ven": 0.78,
    "dhail_d_crit_c": 0.0001,
    "dhail_q_crit_c": 1e-06,
    "dhail_b_ven": 0.308,
    "dhail_nm3": 0,
    "dhail_nm2": 0,
    "dhail_nm1": 0,
    "dhail_ecoll_c": 1,
    "dhail_g2": 0,
    "dhail_c_s": 0.5,
    "dhail_g1": 0,
    "dhail_gamma": 0,
    "dhail_beta": 0,
    "dhail_alpha": 0,
    "dhail_cmu5": 0,
    "dhail_nu": 1,
    "dhail_cmu3": 0,
    "dhail_cmu2": 0,
    "dhail_cmu1": 0,
    "dhail_b_f": 60.7445,
    "dhail_c_z": 2.94643,
    "dhail_rho_v": 0,
    "dhail_sc_coll_n": 1,
    "dhail_b_vel": 0.166667,
    "dhail_cmu0": 0,
    "dhail_s_vel": 0,
    "dhail_sc_delta_n": 0,
    "dhail_sc_delta_q": 0,
    "dhail_mu": 0.333333,
    "dhail_sc_theta_q": 0,
    "dhail_alfa_q": 0,
    "dhail_max_x": 0.0005,
    "dhail_min_x_sedimentation": 2.6e-09,
    "dhail_a_f": 0.673182,
    "dhail_min_x_conversion": 2.6e-09,
    "dhail_min_x_collection": 2.6e-09,
    "dhail_min_x_collision": 2.6e-09,
    "dhail_min_x_depo": 2.6e-09,
    "dhail_min_x_riming": 2.6e-09,
    "dhail_min_x_freezing": 2.6e-09,
    "dhail_cap": 2,
    "dhail_cmu4": 0,
    "dhail_min_x_evap": 2.6e-09,
    "dhail_min_x_melt": 2.6e-09,
    "dhail_min_x_nuc_hetero": 2.6e-09,
    "dhail_min_x": 2.6e-09,
    "dhail_min_x_nuc_homo": 2.6e-09,
    "dhail_b_geo": 0.333333,
    "dhail_a_vel": 39.3,
    "dhail_sc_theta_n": 0,
    "dhail_min_x_act": 2.6e-09,
    "dhail_a_geo": 0.1366,
}

# A dictionary of used values for each parameter
in_params_value_dic = {
    "da_1": 1.0e-3,
    "da_2": r"$ 1.72 / (R_a^{7/8}) $",
    "de_1": r"$ 1 / \sqrt{R_a} $",
    "de_2": r"$ 9.1 / R_a^{11/16} $",
    "dd": "see Equation ..",
    "dN_c": 50,
    "dgamma": 1,
    "dbeta_c": 1,
    "dbeta_r": 7.0 / 8.0,
    "ddelta1": 0.5,
    "ddelta2": 11.0 / 16.0,
    "dzeta": 9.0 / 8.0,
    "drain_gfak": 1,
    "dcloud_k_au": " see Equation .. ",
    "dcloud_k_sc": " see Equation .. ",
    "dkc_autocon": 9.44e9,
    "dinv_z": 1.0 / 250.0,
    "dw": "",
    "dq_crit_i": "",
    "dD_crit_i": "",
    "dD_conv_i": "",
    "dq_crit_r": "",
    "dD_crit_r": "",
    "dq_crit_fr": "",
    "dq_crit_c": "",
    "dq_crit": "",
    "dD_conv_sg": "",
    "dD_conv_ig": "",
    "dx_conv": "",
    "dD_crit_c": "",
    "dD_coll_c": "",
    "dparcel_height": "",
    "dT_nuc": "",
    "dT_freeze": 273.15,
    "dT_f": 233.0,
    "dD_eq": "",
    "drho_w": 1000,
    "drho_0": 1.225,
    "drho_vel": 0.4,
    "drho_vel_c": 1,
    "drho_ice": 916.7,
    "dM_w": "",
    "dM_a": "",
    "dR_universal": "",
    "dEpsilon": "",
    "dgravity_acc": "",
    "dR_a": "",
    "dR_v": "",
    "da_v": 0.78,
    "db_v": 0.308,
    "da_prime": 9.65,
    "db_prime": 9.8,
    "dc_prime": 600,
    "dK_T": 2.4e-2,
    "dL_wd": 2.5008e6,
    "dL_ed": 2.8345e6,
    "dD_v": 2.22e-5,
    "decoll_min": 0.01,
    "decoll_gg": 0.10,
    "decoll_gg_wet": 0.4,
    "dkin_visc_air": 1.5e-5,
    "dalpha_spacefilling": 0.01,
    "dC_mult": 3.5e8,
    "dT_mult_min": "",
    "dT_mult_max": "",
    "dT_mult_opt": "",
    "dconst0": "",
    "dconst3": "",
    "dconst4": "",
    "dconst5": "",
    "dD_rainfrz_gh": 1.25e-3,
    "dD_rainfrz_ig": "0.5e-3",
    "ddv0": "",
    "dp_sat_melt": 6.1078e2,
    "dcp": 1004.64,
    "dk_b": "",
    "da_HET": 0.65,
    "db_HET": 200,
    "dN_sc": "",
    "dn_f": "",
    "dN_avo": "",
    "dgrav": "",
    "damd": "",
    "damw": "",
    "dna_dust": "160e4 for nuc_type == 7 or 6 or 5, else 70e4",
    "dna_soot": "25e6 for nuc_type == 7 or 5, 30e6 for nuc_type == 6, else 0",
    "dna_orga": "30e6 for nuc_type == 7 or 5, else 0",
    "dni_het_max": "",
    "dni_hom_max": "",
    "da_dep": "",
    "db_dep": "",
    "dc_dep": "",
    "dd_dep": "",
    "dnim_imm": "",
    "dnin_dep": "",
    "dalf_imm": "",
    "dbet_dep": "",
    "dbet_imm": "",
    "da_ccn_1": "",
    "da_ccn_2": "",
    "da_ccn_3": "",
    "da_ccn_4": "",
    "db_ccn_1": "",
    "db_ccn_2": "",
    "db_ccn_3": "",
    "db_ccn_4": "",
    "dc_ccn_1": "",
    "dc_ccn_2": "",
    "dc_ccn_3": "",
    "dc_ccn_4": "",
    "dd_ccn_1": 287736034.13,
    "dd_ccn_2": 0.6258809883,
    "dd_ccn_3": 0.8907491812,
    "dd_ccn_4": 360848977.55,
    "dr_const": "",
    "dr1_const": "",
    "dcv": "",
    "dp_sat_const_a": "",
    "dp_sat_ice_const_a": "",
    "dp_sat_const_b": "",
    "dp_sat_ice_const_b": "",
    "dp_sat_low_temp": "",
    "dT_sat_low_temp": "",
    "dalpha_depo": "",
    "dr_0": "",
    "dk_1_conv": 400,
    "dk_2_conv": 0.7,
    "dk_1_accr": 5.0e-4,
    "dk_r": 5.78,
    # Cloud
    "dcloud_nu": 1,
    "dcloud_mu": 1,
    "dcloud_max_x": 2.6e-10,
    "dcloud_min_x": 4.2e-15,
    "dcloud_min_x_act": 4.2e-15,
    "dcloud_min_x_nuc_homo": 4.2e-15,
    "dcloud_min_x_nuc_hetero": 4.2e-15,
    "dcloud_min_x_melt": 4.2e-15,
    "dcloud_min_x_evap": 4.2e-15,
    "dcloud_min_x_freezing": 4.2e-15,
    "dcloud_min_x_depo": 4.2e-15,
    "dcloud_min_x_collision": 4.2e-15,
    "dcloud_min_x_collection": 4.2e-15,
    "dcloud_min_x_conversion": 4.2e-15,
    "dcloud_min_x_sedimentation": 4.2e-15,
    "dcloud_min_x_riming": 4.2e-15,
    "dcloud_a_geo": 1.24e-1,
    "dcloud_b_geo": 0.333333,
    "dcloud_a_vel": 3.75e5,
    "dcloud_b_vel": 0.666667,
    "dcloud_a_ven": 0.78,
    "dcloud_b_ven": 0.308,
    "dcloud_cap": 2.0,
    "dcloud_vsedi_max": 1.0,
    "dcloud_vsedi_min": 0.0,
    "dcloud_c_s": r"$1/" + parse_word("dcloud_cap")[1::],
    "dcloud_a_f": "see Equation ..",
    "dcloud_b_f": "see Equation ..",
    "dcloud_c_z": "see Equation ..",
    "dcloud_rho_v": "Density correction for terminal fall velocity",
    # Rain
    "drain_nu": -2.0 / 3.0,  # SB: -2/3 COSMO: 0.0
    "drain_mu": 1.0 / 3.0,  # SB: 1/3 COMSO: 1.0/3.0
    "drain_max_x": 3.0e-6,
    "drain_min_x": 2.6e-10,
    "drain_min_x_act": 2.6e-10,
    "drain_min_x_nuc_homo": 2.6e-10,
    "drain_min_x_nuc_hetero": 2.6e-10,
    "drain_min_x_melt": 2.6e-10,
    "drain_min_x_evap": 2.6e-10,
    "drain_min_x_freezing": 2.6e-10,
    "drain_min_x_depo": 2.6e-10,
    "drain_min_x_collision": 2.6e-10,
    "drain_min_x_collection": 2.6e-10,
    "drain_min_x_conversion": 2.6e-10,
    "drain_min_x_sedimentation": 2.6e-10,
    "drain_min_x_riming": 2.6e-10,
    "drain_a_geo": 1.24e-1,
    "drain_b_geo": 0.333333,
    "drain_a_vel": 114.0137,
    "drain_b_vel": 0.234370,
    "drain_cap": 2.0,
    "drain_alpha": 9.292,
    "drain_beta": 9.623,
    "drain_gamma": 6.222e2,
    "drain_cmu0": 6.0,
    "drain_cmu1": 3.0e1,
    "drain_cmu2": 1.0e3,
    "drain_cmu3": 1.1e-3,
    "drain_cmu4": 1.0,
    "drain_cmu5": 2.0,
    "drain_gfak": 1_0,
    "drain_vsedi_max": 20.0,
    "drain_vsedi_min": 0.1,
    "drain_c_s": r"$1/" + parse_word("drain_cap")[1::],
    "drain_a_f": "see Equation ..",
    "drain_b_f": "see Equation ..",
    "drain_c_z": "see Equation ..",
    "drain_nm1": "see Equation ..",
    "drain_nm2": "see Equation ..",
    "drain_nm3": "see Equation ..",
    "drain_g1": 1,
    "drain_g2": 6,
    "drain_rho_v": "Density correction for terminal fall velocity",
    # Graupel
    "dgraupel_nu": 1.0,  # SB
    "dgraupel_mu": 1.0 / 3.0,  # SB
    "dgraupel_max_x": 5.0e-4,
    "dgraupel_min_x": 1.0e-9,
    "dgraupel_min_x_act": 1.0e-9,
    "dgraupel_min_x_nuc_homo": 1.0e-9,
    "dgraupel_min_x_nuc_hetero": 1.0e-9,
    "dgraupel_min_x_melt": 1.0e-9,
    "dgraupel_min_x_evap": 1.0e-9,
    "dgraupel_min_x_freezing": 1.0e-9,
    "dgraupel_min_x_depo": 1.0e-9,
    "dgraupel_min_x_collision": 1.0e-9,
    "dgraupel_min_x_collection": 1.0e-9,
    "dgraupel_min_x_conversion": 1.0e-9,
    "dgraupel_min_x_sedimentation": 1.0e-9,
    "dgraupel_min_x_riming": 1.0e-9,
    "dgraupel_a_geo": 1.42e-1,
    "dgraupel_b_geo": 0.314,
    "dgraupel_a_vel": 86.89371,
    "dgraupel_b_vel": 0.268325,
    "dgraupel_a_ven": 0.78,
    "dgraupel_b_ven": 0.308,
    "dgraupel_cap": 2.0,
    "dgraupel_vsedi_max": 30.0,
    "dgraupel_vsedi_min": 0.1,
    "dgraupel_d_crit_c": 100.0e-6,
    "dgraupel_q_crit_c": 1.0e-6,
    "dgraupel_s_vel": 0.0,
    "dgraupel_ecoll_c": 1.0,
    "dgraupel_c_s": r"$1/" + parse_word("dgraupel_cap")[1::],
    "dgraupel_nm1": "see Equation ..",
    "dgraupel_nm2": "see Equation ..",
    "dgraupel_a_f": "see Equation ..",
    "dgraupel_b_f": "see Equation ..",
    "dgraupel_c_z": "see Equation ..",
    "dgraupel_sc_coll_n": "see Equation ..",
    "dgraupel_g1": 120,
    "dgraupel_g2": 40320,
    "dgraupel_lambda": "see Equation ..",
    "dgraupel_alfa_n": "see Equation ..",
    "dgraupel_alfa_q": "see Equation ..",
    "dgraupel_rho_v": "Density correction for terminal fall velocity",
    # Hail
    "dhail_nu": 1.0,
    "dhail_mu": 1.0 / 3.0,
    "dhail_max_x": 5.0e-4,
    "dhail_min_x": 2.6e-9,
    "dhail_min_x_act": 2.6e-9,
    "dhail_min_x_nuc_homo": 2.6e-9,
    "dhail_min_x_nuc_hetero": 2.6e-9,
    "dhail_min_x_melt": 2.6e-9,
    "dhail_min_x_evap": 2.6e-9,
    "dhail_min_x_freezing": 2.6e-9,
    "dhail_min_x_depo": 2.6e-9,
    "dhail_min_x_collision": 2.6e-9,
    "dhail_min_x_collection": 2.6e-9,
    "dhail_min_x_conversion": 2.6e-9,
    "dhail_min_x_sedimentation": 2.6e-9,
    "dhail_min_x_riming": 2.6e-9,
    "dhail_a_geo": 0.1366,
    "dhail_b_geo": 1.0 / 3.0,
    "dhail_a_vel": 39.3,
    "dhail_b_vel": 0.166667,
    "dhail_a_ven": 0.78,
    "dhail_b_ven": 0.308,
    "dhail_cap": 2.0,
    "dhail_vsedi_max": 30.0,
    "dhail_vsedi_min": 0.1,
    "dhail_sc_coll_n": 1.0,
    "dhail_d_crit_c": 100.0e-6,
    "dhail_q_crit_c": 1.0e-6,
    "dhail_s_vel": 0.0,
    "dhail_ecoll_c": 1.0,
    "dhail_c_s": r"$1/" + parse_word("dhail_cap")[1::],
    "dhail_a_f": "see Equation ..",
    "dhail_b_f": "see Equation ..",
    "dhail_c_z": "see Equation ..",
    "dhail_lambda": "see Equation ..",
    "dhail_alfa_n": "see Equation ..",
    "dhail_alfa_q": "see Equation ..",
    "dhail_rho_v": "Density correction for terminal fall velocity",
    # Ice
    "dice_nu": 1.0,
    "dice_mu": 1.0 / 3.0,
    "dice_max_x": 1.0e-5,
    "dice_min_x": 1.0e-12,
    "dice_min_x_act": 1.0e-12,
    "dice_min_x_nuc_homo": 1.0e-12,
    "dice_min_x_nuc_hetero": 1.0e-12,
    "dice_min_x_melt": 1.0e-12,
    "dice_min_x_evap": 1.0e-12,
    "dice_min_x_freezing": 1.0e-12,
    "dice_min_x_depo": 1.0e-12,
    "dice_min_x_collision": 1.0e-12,
    "dice_min_x_collection": 1.0e-12,
    "dice_min_x_conversion": 1.0e-12,
    "dice_min_x_sedimentation": 1.0e-12,
    "dice_min_x_riming": 1.0e-12,
    "dice_a_geo": 0.835,
    "dice_b_geo": 0.39,
    "dice_a_vel": 2.77e1,
    "dice_b_vel": 0.21579,
    "dice_a_ven": 0.78,
    "dice_b_ven": 0.308,
    "dice_cap": 2.0,
    "dice_vsedi_max": 3.0,
    "dice_vsedi_min": 0.0,
    "dice_sc_coll_n": 0.8,
    "dice_d_crit_c": 150.0e-6,
    "dice_q_crit_c": 1.0e-5,
    "dice_s_vel": 0.05,
    "dice_ecoll_c": 0.80,
    "dice_c_s": r"$1/" + parse_word("dice_cap")[1::],
    "dice_a_f": "see Equation ..",
    "dice_b_f": "see Equation ..",
    "dice_c_z": "see Equation ..",
    "dice_sc_delta_n": "see Equation ..",
    "dice_sc_delta_q": "see Equation ..",
    "dice_sc_theta_n": "see Equation ..",
    "dice_sc_theta_q": "see Equation ..",
    "dice_lambda": "see Equation ..",
    "dice_alfa_n": "see Equation ..",
    "dice_alfa_q": "see Equation ..",
    "dice_rho_v": "Density correction for terminal fall velocity",
    # Snow
    "dsnow_nu": 1.0,  # COSMO: 0.0, SB 1.0
    "dsnow_mu": 1.0 / 3.0,  # COSMO 0.5, SB: 1.0/3.0
    "dsnow_max_x": 2.0e-5,
    "dsnow_min_x": 1.0e-10,
    "dsnow_min_x_act": 1.0e-10,
    "dsnow_min_x_nuc_homo": 1.0e-10,
    "dsnow_min_x_nuc_hetero": 1.0e-10,
    "dsnow_min_x_melt": 1.0e-10,
    "dsnow_min_x_evap": 1.0e-10,
    "dsnow_min_x_freezing": 1.0e-10,
    "dsnow_min_x_depo": 1.0e-10,
    "dsnow_min_x_collision": 1.0e-10,
    "dsnow_min_x_collection": 1.0e-10,
    "dsnow_min_x_conversion": 1.0e-10,
    "dsnow_min_x_sedimentation": 1.0e-10,
    "dsnow_min_x_riming": 1.0e-10,
    "dsnow_a_geo": 2.4,
    "dsnow_b_geo": 0.455,
    "dsnow_a_vel": 8.8,
    "dsnow_b_vel": 0.15,
    "dsnow_a_ven": 0.78,
    "dsnow_b_ven": 0.308,
    "dsnow_cap": 2.0,
    "dsnow_vsedi_max": 3.0,
    "dsnow_vsedi_min": 0.1,
    "dsnow_sc_coll_n": 0.8,
    "dsnow_d_crit_c": 150.0e-6,
    "dsnow_q_crit_c": 1.0e-5,
    "dsnow_s_vel": 0.25,
    "dsnow_ecoll_c": 0.80,
    "dsnow_c_s": r"$1/" + parse_word("dsnow_cap")[1::],
    "dsnow_a_f": "see Equation ..",
    "dsnow_b_f": "see Equation ..",
    "dsnow_c_z": "see Equation ..",
    "dsnow_sc_delta_n": "see Equation ..",
    "dsnow_sc_theta_n": "see Equation ..",
    "dsnow_lambda": "see Equation ..",
    "dsnow_alfa_n": "see Equation ..",
    "dsnow_alfa_q": "see Equation ..",
    "dsnow_rho_v": "Density correction for terminal fall velocity",
}


def set_size(beamer=True, scale=None):
    """
    Set some options to use latex.

    Parameters
    ----------
    beamer : bool
        Beamer is used for bigger texts.
    scale : float
        Can be used to scale the fontsize.
    """
    if beamer:
        mpl.rcParams.update(
            {
                "text.usetex": False,
                "font.family": "serif",
                "axes.labelsize": 20,
                "font.size": 20,
                "legend.fontsize": 16,
                "xtick.labelsize": 12,
                "ytick.labelsize": 16,
            }
        )
    else:
        mpl.rcParams.update(
            {
                "text.usetex": False,
                "font.family": "serif",
                "axes.labelsize": 10,
                "font.size": 10,
                "legend.fontsize": 10,
                "xtick.labelsize": 8,
                "ytick.labelsize": 8,
            }
        )


def get_value(param):
    """
    Given an input parameter, get the value used in the model.

    Parameters
    ----------
    param : string
        Key from in_params_value_dic (a model input parameter)

    Returns
    -------
    Formatted string with value of the model input parameter.
    """
    if param in in_params_value_dic:
        if isinstance(in_params_value_dic[param], str):
            return in_params_value_dic[param]
        return f"$ {in_params_value_dic[param]:1.3e} $"
    return ""


def get_unit(param, brackets=False):
    """
    Get the unit for a given parameter.

    Parameters
    ----------
    param : string
        Name of the parameter
    brackets : bool
        If true, add "[]" to output

    Returns
    -------
    string
        Unit string.
    """
    unit_dic = {
        "T": "K",
        "p": "Pa",
        "pressure": "Pa",
        "pressure_hPa": "hPa",
        "time_after_ascent": "s",
        "time_after_ascent_h": "h",
        "time": "s",
        "timestep": "s",
    }
    if param in unit_dic:
        if brackets:
            return "[" + unit_dic[param] + "]"
        return unit_dic[param]
    else:
        return ""
