#!/bin/bash
#SBATCH --job-name=n_ens_merge_traj
#SBATCH --output=logs/n_ens_merge_traj_%A_%a.out
#SBATCH --error=logs/n_ens_merge_traj_%A_%a.err
#SBATCH --time=8:00:00 # Should be enough time for about 30 parameters
#SBATCH -p parallel
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=32
#SBATCH -A m2_zdvresearch
#SBATCH --cpus-per-task=1
#SBATCH --mem=10000
#SBATCH -C skylake

# send with sbatch --array=0-44 /lustre/project/m2_zdvresearch/mahieron/netcdf_vladiana/conv_600_0_traj_t000000_p001.nc_wcb 0
module purge
module load devel/CMake/3.7.2
module load mpi/OpenMPI/3.1.4-GCC-8.3.0
module load numlib/GSL/2.5-GCCcore-8.3.0
module load data/netCDF-C++4/4.3.1-gompi-2019b
module load devel/Boost/1.71.0-gompi-2019b
module load lang/Python/3.7.4-GCCcore-8.3.0

# Store working directory to be safe
cd ..
SAVEDPWD=$(pwd)
export AD_SIM_HOME=/localscratch/${SLURM_JOB_ID}
N_CONFIGS=10
ID_NUMBER=$SLURM_ARRAY_TASK_ID
# ie "/lustre/project/m2_zdvresearch/mahieron/netcdf_vladiana/conv_600_0_traj_t000000_p001.nc_wcb"
SAVE_INPUTFILENAME=$1
TRAJ=$2
INPUT_FILENAME="${AD_SIM_HOME}/data/${SAVE_INPUTFILENAME##*/}"
FOLDER_NAME=${SAVE_INPUTFILENAME##*/}
FOLDER_NAME=${FOLDER_NAME%.*}
SAVE_OUTPUTPATH="/lustre/project/m2_zdvresearch/mahieron/perturbed_ensembles/${FOLDER_NAME}/mpi_traj${TRAJ}/"
OUTPUT_PATH="${AD_SIM_HOME}/output/"
SAVE_ENSEMBLECONFIG="${SAVEDPWD}/configs/all/"

cleanup(){
    echo "Copy from ${OUTPUT_PATH}${1}/*.nc_wcb to ${SAVE_OUTPUTPATH}${1}/*.nc_wcb"
    if [ ! -d "${SAVE_OUTPUTPATH}${1}" ]
    then
        mkdir -p "${SAVE_OUTPUTPATH}${1}"
    fi
    find ${OUTPUT_PATH}${1}/ -type f -name "*.nc_wcb" -exec cp {} ${SAVE_OUTPUTPATH}${1}/ \;
    find ${OUTPUT_PATH}${1}/ -type f -name "*.nc_wcb" -exec rm {} \;
}


# Copy executable, input file, configuration file
# Create directories for temporary files, output data
if [ ! -d "${SAVE_OUTPUTPATH}" ]
then
    mkdir -p "${SAVE_OUTPUTPATH}"
fi

if [ ! -d "${AD_SIM_HOME}/build/apps/src/microphysics/" ]
then
    mkdir -p "${AD_SIM_HOME}/build/apps/src/microphysics/"
fi
cp ${SAVEDPWD}/build/apps/src/microphysics/trajectories ${AD_SIM_HOME}/build/apps/src/microphysics/

if [ ! -d "${AD_SIM_HOME}/data/" ]
then
    mkdir -p "${AD_SIM_HOME}/data/"
fi
cp ${SAVE_INPUTFILENAME} ${AD_SIM_HOME}/data/

if [ ! -d "${AD_SIM_HOME}/tmp/" ]
then
    mkdir -p "${AD_SIM_HOME}/tmp/"
fi

if [ ! -d "${AD_SIM_HOME}/scripts/" ]
then
    mkdir -p "${AD_SIM_HOME}/scripts/"
fi

if [ ! -d "${AD_SIM_HOME}/configs/all" ]
then
    mkdir -p "${AD_SIM_HOME}/configs/all"
fi

f_list=( $(ls -d ${SAVE_ENSEMBLECONFIG}* | sed 's/\/$//') )
length=${#f_list[*]}

let IDX_START=$ID_NUMBER*$N_CONFIGS

if (( $IDX_START + $N_CONFIGS > $length - 1 ))
then
    let N_CONFIGS=$length-$IDX_START
fi

config_list=${f_list[@]:$IDX_START:$N_CONFIGS}
for CONFIG in ${config_list[@]}
do
    cp ${CONFIG} ${AD_SIM_HOME}/configs/all/
done

cp ${SAVEDPWD}/dmin_wetgrowth_lookup.dat ${AD_SIM_HOME}/
cp ${SAVEDPWD}/scripts/*.py ${AD_SIM_HOME}/scripts/.
cd ${AD_SIM_HOME}

for ENSEMBLE_CONFIG in ${AD_SIM_HOME}/configs/all/*
do
    SUFF=${ENSEMBLE_CONFIG##*/}
    SUFF=${SUFF%.*}
    echo "Running for ${SUFF} with ${SLURM_NTASKS}"
    NEW_CHECKPOINTS=${AD_SIM_HOME}/tmp/${SUFF}
    if [ ! -d "$NEW_CHECKPOINTS" ]
    then
        mkdir -p "$NEW_CHECKPOINTS"
    fi

    if [ ! -d ${OUTPUT_PATH}${SUFF} ]
    then
        mkdir -p ${OUTPUT_PATH}${SUFF}
    fi

    # Environmental conditions
    SCALING_FACTOR="1.0"
    AUTO_TYPE="3"
    TIMESTEP="20"

    # Output variables
    PROGRESSBAR="0"
    START_TIME="-2800"
    WRITE_INDEX="15000"
    SNAPSHOT_INDEX="1"
    TARGET_TIME_AFTER_START="26000"

    # Operational variables
    START_OVER="0"
    START_OVER_ENVIRONMENT="1"
    FIXED_ITERATION="0"

    mpirun -n ${SLURM_NTASKS} ${AD_SIM_HOME}/build/bin/./trajectories -w ${WRITE_INDEX} -a ${AUTO_TYPE} \
    -t ${FIXED_ITERATION} -s ${START_OVER} -f ${TARGET_TIME_AFTER_START} -d ${TIMESTEP} \
    -i ${SNAPSHOT_INDEX} -b ${SCALING_FACTOR} \
    -o ${OUTPUT_PATH}${SUFF}"/wcb${TARGET_TIME_AFTER_START}_traj${TRAJ}_MAP_t000000_p001" \
    -e ${START_OVER_ENVIRONMENT} \
    -p ${PROGRESSBAR} \
    -n ${START_TIME} \
    -l ${INPUT_FILENAME} -r ${TRAJ} -g 0 \
    -m ${ENSEMBLE_CONFIG} \
    -h ${NEW_CHECKPOINTS}

    cleanup $SUFF
done
wait
exit 0